{"version":3,"sources":["logIn/Login.js","actions/authActions.js","signUp/Signup.js","protectedRoute/ProtectedRoute.js","actions/testActions.js","dashboard/TestCard.js","dashboard/ResultCard.js","dashboard/Dashboard.js","attemptTest/SearchBox.js","attemptTest/TestList.js","attemptTest/SelectTest.js","actions/selectActions.js","attemptTest/AttemptTest.js","navbar/LeftMenu.js","navbar/index.js","result/SearchBox.js","result/TestList.js","result/SelectTest.js","result/ResultWrapper.js","TestInstructions/TestInstruction.js","result/ShowResult.js","actions/attemptTestActions.js","testPreview/Counter.js","testPreview/LeftSide.js","testPreview/RightSide.js","testPreview/Footer.js","testPreview/HandleLiveTest.js","testPreview/TestPreview.js","testPreview/TestPreviewWrapper.js","App/App.js","serviceWorker.js","reducers/authReducer.js","reducers/testReducer.js","reducers/selectReducer.js","reducers/attemptedTestReducer.js","reducers/index.js","store/index.js","index.js"],"names":["connect","state","isAuthenticated","auth","isLoading","dispatch","sendLoginRequest","values","type","requestOptions","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","fetch","then","response","json","data","user","profileID","token","setItem","payload","catch","error","loginUser","props","history","useHistory","Typography","Title","useEffect","push","justify","align","className","xs","sm","md","lg","name","initialValues","remember","onFinish","onFinishFailed","errorInfo","console","log","Item","rules","required","message","placeholder","Password","style","minWidth","loading","htmlType","Signup","useState","showSelect","setShowSelect","Option","Select","defaultValue","onSelect","select","optionData","value","disabled","ProtectedRoute","Component","this","component","userInfo","to","pathname","React","testSubmitted","testID","fetchAttemptTests","a","tests","obj","fetchTests","isLoadingTest","test","classID","studentClassName","trimLength","length","slice","reverse","map","index","key","testName","Array","fill","item","i","Avatar","active","size","shape","Input","isLoadingAttemptedTest","attemptedTest","gutter","xl","Search","SearchBox","searchTerm","setSearchTerm","handleListData","toLowerCase","onSearch","onChange","e","target","enterButton","TestList","setTests","searchTests","setSearchTests","searching","setSearching","selectRef","selectedData","handleSelectTest","classList","remove","currentTarget","add","filter","includes","onClick","handleSelectedTest","selectedTest","testData","useBreakpoint","Grid","signOut","setisAuthenticated","homeRoute","testRoute","resultRoute","signOutRoute","profileRoute","mode","removeItem","Navbar","current","visible","showDrawer","setState","onClose","title","placement","closable","replace","selectedTestData","testRules","confirm","Modal","outOfMarks","questions","minutes","category","attempted","_id","Object","rule","src","alt","backgroundColor","icon","ExclamationCircleOutlined","content","onOk","onCancel","selectedTestResultData","marks","rightAnswers","submitMinutes","totalMarks","totalAttempt","date","testInfo","correct","wrong","submitDate","Date","toLocaleDateString","percent","Math","floor","status","width","height","chartType","loader","options","pieHole","rootProps","updateTimeSpentByStudent","completed","totalTime","updatingAttemptedMinutes","parseInt","subtractTime","attemptedTime","abs","testStatus","time","Counter","totalMinutes","parse","remainingTime","rM","count","hideDay","LeftSide","changeBg","activatedQue","answered","footerClicked","accordionContent","setFlag","questionsData","undefined","activateQue","leftActiveQue","nextProps","nextState","footerClick","question","ref","handleQuestionClick","handleClick","RightSide","handleClearResponse","newSelectedAnswers","selectedAnswers","blankClearAttempt","questionAnswered","changeActivatedQueInChild","changeActivatedQue","changeParentActivatedQue","submitTest","dataToSubmit","userAnswers","answers","unanswered","element","changeIndex","questionIndex","apply","onRef","radioStyle","display","lineHeight","description","Group","option","CloseOutlined","postedData","submitBy","Footer","handleNext","handleFooterButtons","handleSubmitTest","HandleLiveTest","changeActivatedQueFromFooter","child","buttonClicked","updatedUserAnswers","totalAnswered","totalPending","changed","totalScore","totalFlagged","flag","updateTimer","TestPreview","intervalId","timer","loadData","intervalID","setInterval","bind","clearInterval","tM","userAttemptedTime","isSelected","keys","selectedTestName","exact","path","Login","Dashboard","AttemptTest","Result","IndividualResult","TestInstruction","onLeave","TestPreviewWrapper","Boolean","window","location","hostname","match","initialState","isLoggingIn","isSigningUp","isLoggingOut","isVerifying","loginError","signupError","logoutError","sendPassResetSuccess","sendPassResetError","isFetching","fetchingError","isFetched","testSubmitError","isFetchingError","initializeTimer","combineReducers","action","errMess","verifyingError","fetchError","allEnhancers","compose","applyMiddleware","thunk","logger","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b631be02.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\r\nimport React, {useEffect} from \"react\";\r\nimport { Row, Col, Typography } from \"antd\";\r\nimport \"./Login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\n function Login(props) {\r\n  const history = useHistory();\r\n  const { Title } = Typography;\r\n  const { isLoading } = props;\r\n\r\n\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    if(props.isAuthenticated){\r\n      history.push(\"/\");\r\n    }\r\n\r\n  }, [props])\r\n\r\n  const submitForm = (values) => {\r\n    props.sendLoginRequest(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  return (\r\n    <>\r\n      <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n        <Col xs={22} sm={22} md={6} lg={6} className=\"signin__container\">\r\n          <p className=\"sub-title\">🎓 EMS</p>\r\n\r\n          <Form\r\n            \r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={submitForm}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input  placeholder=\"Email\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password  placeholder=\"Password\"/>\r\n            </Form.Item>\r\n            <Form.Item >\r\n              <Button type=\"primary\"\r\n              className=\"sign__in\"\r\n              style={{minWidth:\"44px\"}}\r\n              loading={isLoading}\r\n               htmlType=\"submit\">\r\n                {(!isLoading)?(\"Sign In\"):('Logging In')}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      isAuthenticated: state.auth.isAuthenticated,\r\n      isLoading: state.auth.isLoading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      sendLoginRequest: (values) => dispatch(loginUser(values)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\n\r\nexport const SEND_PASS_RESET = \"SEND_PASS_RESET\";\r\nexport const SEND_PASS_RESET_ERROR = \"SEND_PASS_RESET_ERROR\";\r\nexport const SEND_PASS_RESET_SUCCESS = \"SEND_PASS_RESET_SUCCESS\";\r\n\r\nconst requestLogin = () => {\r\n  return {\r\n    type: LOGIN_REQUEST\r\n  };\r\n};\r\n\r\nconst receiveLogin = (user,profileID) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n    profileID\r\n  };\r\n};\r\n\r\nconst loginError = () => {\r\n  return {\r\n    type: LOGIN_FAILURE\r\n  };\r\n};\r\n\r\nconst requestsignup = () => {\r\n  return {\r\n    type: SIGN_UP_REQUEST\r\n  };\r\n};\r\n\r\nconst receiveSignup = user => {\r\n  return {\r\n    type: SIGN_UP_SUCCESS,\r\n    user\r\n  };\r\n};\r\n\r\nconst signupError = (errMess) => {\r\n  return {\r\n    type: SIGN_UP_FAILURE,\r\n    errMess\r\n  };\r\n};\r\n\r\nconst requestLogout = () => {\r\n  return {\r\n    type: LOGOUT_REQUEST\r\n  };\r\n};\r\n\r\nconst receiveLogout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS\r\n  };\r\n};\r\n\r\nconst logoutError = () => {\r\n  return {\r\n    type: LOGOUT_FAILURE\r\n  };\r\n};\r\n\r\nconst verifyRequest = () => {\r\n  return {\r\n    type: VERIFY_REQUEST\r\n  };\r\n};\r\n\r\nconst verifySuccess = () => {\r\n  return {\r\n    type: VERIFY_SUCCESS\r\n  };\r\n};\r\n\r\n\r\n\r\nconst sendingPassReset = () => {\r\n  return {\r\n    type: SEND_PASS_RESET\r\n  };\r\n};\r\n\r\nconst sendPassResetError = (errMess) => {\r\n  return {\r\n    type: SEND_PASS_RESET_ERROR,\r\n    errMess\r\n  };\r\n};\r\n\r\nconst sendPassResetSuccess = () => {\r\n  return {\r\n    type: SEND_PASS_RESET_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const loginUser = (values) => dispatch => {\r\n\r\n  dispatch(requestLogin());\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(values),\r\n  };\r\n\r\n  fetch(\"/user/login\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.token) {\r\n        localStorage.setItem(\"token\", `Bearer ${data.token}`);\r\n        localStorage.setItem('userProfile', JSON.stringify(data.payload.user));\r\n        localStorage.setItem('profileID', data.payload.profileID);\r\n        dispatch(receiveLogin(data.payload.user, data.payload.profileID));\r\n       // history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch(error => {\r\n      //Do something with the error if you want!\r\n      dispatch(loginError());\r\n    });\r\n\r\n};\r\n\r\n// export const signupUser = (displayName, email, password, password2) => dispatch => {\r\n//   dispatch(requestsignup());\r\n//   //verifying password and name.\r\n//   if(displayName.length < 3){\r\n//     return dispatch(signupError(\"Name must have atleast 3 characters.\"));\r\n//   }\r\n\r\n//   if(displayName.length > 50){\r\n//     return dispatch(signupError(\"Name must have atmost 50 characters.\"));\r\n//   }\r\n\r\n//   if(!/^[a-zA-Z ]*$/.test(displayName)){\r\n//     return dispatch(signupError(\"Name must contain only alphabets.\"));\r\n//   }\r\n  \r\n//   if(password !== password2){\r\n//     return dispatch(signupError(\"Passwords do not match\"));\r\n//   }\r\n\r\n// };\r\n\r\nexport const logoutUser = () => dispatch => {\r\n  dispatch(requestLogout());\r\n  dispatch(receiveLogout());\r\n};\r\n\r\n// export const verifyAuth = () => dispatch => {\r\n//   dispatch(verifyRequest());\r\n//   myFirebase.auth().onAuthStateChanged(user => {\r\n//     if (user !== null) {\r\n//       dispatch(receiveLogin(user));\r\n//     }\r\n//     dispatch(verifySuccess());\r\n//   });\r\n// };\r\n\r\n\r\n\r\n// export const sendPasswordResetLink = (email) => dispatch => {\r\n//   dispatch(sendingPassReset());\r\n//   myFirebase.auth().sendPasswordResetEmail(email)\r\n//   .then(()=>{\r\n//     dispatch(sendPassResetSuccess());\r\n//   })\r\n//   .catch(error=>{\r\n//     console.error(error);\r\n//     switch(error.code){\r\n//       case 'auth/invalid-email':\r\n//         dispatch(sendPassResetError(\"Invalid email address.\"));\r\n//         break;\r\n//       case 'auth/user-not-found':\r\n//         dispatch(sendPassResetError(\"User not found with the given email address.\"));\r\n//         break;\r\n//       default:\r\n//         dispatch(sendPassResetError(\"Failed to send password reset email.\"));\r\n//     }\r\n//   })\r\n// }","import React, { useState } from \"react\";\r\nimport { Row, Col, Typography, Form, Input, Button, Select } from \"antd\";\r\nimport \"./Signup.css\";\r\n\r\nexport default function Signup() {\r\n  const [showSelect, setShowSelect] = useState(false);\r\n  const { Title } = Typography;\r\n  const { Option } = Select;\r\n\r\n  const submitForm = (values) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(values),\r\n    };\r\n    //console.log(\"Success:\", values);\r\n    fetch(\"/user/signup\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // localStorage.setItem(\"token\",`Bearer ${data.token}`);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const handleSelect = (select, optionData) => {\r\n    console.log(optionData);\r\n    if (optionData.value === \"teacher\") {\r\n      setShowSelect(true);\r\n    } else {\r\n      setShowSelect(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n        <Col xs={22} sm={22} md={8} lg={8} className=\"signup__container\">\r\n        <p className=\"sub-title__signup\">🎓 EMS</p>\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={submitForm}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <div className=\"element__wrapper\">\r\n              <Form.Item\r\n                name=\"firstName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your First Name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"First Name\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"lastName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Last Name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Last Name\" />\r\n              </Form.Item>\r\n            </div>\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"abcd@gmail.com\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Form.Item\r\n                name=\"phone\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Phone Number!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"tel\" placeholder=\"7275XXXXXX\" />\r\n              </Form.Item>\r\n\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item\r\n                  name=\"role\"\r\n                  rules={[\r\n                    {\r\n                      message: \"Please input your role!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select defaultValue=\"Role\" onSelect={handleSelect}>\r\n                    <Option value=\"student\">Student</Option>\r\n                    <Option value=\"teacher\">Teacher</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"section\"\r\n                  rules={[\r\n                    {\r\n                      message: \"Please input your section!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select defaultValue=\"Section\" disabled={showSelect}>\r\n                    <Option value=\"A\">A</Option>\r\n                    <Option value=\"B\">B</Option>\r\n                    <Option value=\"C\">C</Option>\r\n                    <Option value=\"D\">D</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"className\"\r\n                  rules={[\r\n                    {\r\n                      message: \"Please input your email!\",\r\n                    },\r\n                  ]}\r\n                \r\n                >\r\n                  <Select defaultValue=\"Class\" disabled={showSelect}>\r\n                    <Option value=\"X\">X</Option>\r\n                    <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n\r\n              <Button type=\"primary\"  className=\"sign__up\" htmlType=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n    \r\n\r\n    render() {\r\n        const Component = this.props.component;\r\n        return this.props.isAuthenticated ? (\r\n            <Component userInfo ={this.props.userInfo}/>\r\n        ) : (\r\n            <Redirect to={{ pathname: '/signin' }} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        userInfo: state.auth.user,\r\n    };\r\n  };\r\nexport default connect(mapStateToProps,null)(ProtectedRoute);","export const FETCH_TEST_REQUEST = \"FETCH_TEST_REQUEST\";\r\nexport const FETCH_TEST_SUCCESS = \"FETCH_TEST_SUCCESS\";\r\nexport const FETCH_ATTEMPT_TEST_SUCCESS = \"FETCH_ATTEMPT_TEST_SUCCESS\";\r\nexport const FETCH_TEST_FAILURE = \"FETCH_TEST_FAILURE\";\r\nexport const SUBMIT_TEST_FAILURE = \"SUBMIT_TEST_FAILURE\";\r\nexport const SUBMIT_TEST_SUCCESS = \"SUBMIT_TEST_SUCCESS\";\r\n\r\nconst requestTests = () => {\r\n  return {\r\n    type: FETCH_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveTests = (tests) => {\r\n  return {\r\n    type: FETCH_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nconst testsError = () => {\r\n  return {\r\n    type: FETCH_TEST_FAILURE,\r\n  };\r\n};\r\nconst testSubmitError = () => {\r\n  return {\r\n    type: SUBMIT_TEST_FAILURE,\r\n  };\r\n};\r\nconst testSubmitted = (testID) => {\r\n  return {\r\n    type: SUBMIT_TEST_SUCCESS,\r\n    testID: testID,\r\n  };\r\n};\r\n\r\nconst receiveAttemptTests = (tests) => {\r\n  return {\r\n    type: FETCH_ATTEMPT_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nexport const fetchAttemptTests = (profileID) => async (dispatch) => {\r\n  dispatch(requestTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/student/attempt-tests/${profileID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        dispatch(receiveAttemptTests(data.obj));\r\n        // history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      dispatch(testsError());\r\n    });\r\n};\r\n\r\nexport const fetchTests = (className) => async (dispatch) => {\r\n  dispatch(requestTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/student/tests/${className}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        dispatch(receiveTests(data.obj));\r\n        // history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      dispatch(testsError());\r\n    });\r\n};\r\n\r\nexport const submitTest = (data) => async (dispatch) => {\r\n  // dispatch(requestTests());\r\n  const {\r\n    testID,\r\n    correct,\r\n    unanswered,\r\n    totalMarks,\r\n    profileID,\r\n    testName,\r\n    wrong,\r\n  } = data;\r\n  const testData = JSON.parse(localStorage.getItem(testID));\r\n  let submitMinutes = testData.rM;\r\n  const submitBy = [\r\n    {\r\n      correct,\r\n      unanswered,\r\n      totalMarks,\r\n      profileID,\r\n      testName,\r\n      wrong,\r\n      submitMinutes,\r\n    },\r\n  ];\r\n\r\n  const postedData = {\r\n    submitBy,\r\n    testID,\r\n    testName,\r\n  };\r\n  console.log(postedData);\r\n\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n    body: JSON.stringify(postedData),\r\n  };\r\n\r\n  await fetch(`/student/submit-test/${testID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        dispatch(testSubmitted(testID));\r\n        // history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      dispatch(testSubmitError());\r\n    });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./TestCard.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchTests } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction TestCard(props) {\r\n  let { tests, isLoading, studentClassName, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength\r\n        ? tests.slice(-(trimLength)).reverse()\r\n        : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(studentClassName);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header red__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Today's Test\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/attempt-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box red__index\">{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"test__name \"> {test.testName}</div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestCard);\r\n","import React, { useEffect } from \"react\";\r\nimport \"./TestCard.css\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchAttemptTests } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction ResultCard(props) {\r\n  let { tests, isLoading, profileID, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength\r\n        ? tests.slice(-(trimLength)).reverse()\r\n        : tests;\r\n\r\n  useEffect(() => {\r\n   \r\n      props.fetchTests(profileID);\r\n      console.log(\"fired\")\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Recently Attempted Tests\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/result\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box \">{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"test__name\"> {test.testName}</div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingAttemptedTest,\r\n    tests: state.tests.attemptedTest,\r\n    profileID: state.auth.profileID\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCard);\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport TestCard from \"./TestCard\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard(props) {\r\n  const { studentClassName, profileID, userInfo } = props;\r\n  const trimLength = 8;\r\n  // console.log(userInfo);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <TestCard\r\n              studentClassName={studentClassName}\r\n              trimLength={trimLength}\r\n            />\r\n          </Col>\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <ResultCard  trimLength={trimLength} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    studentClassName: state.auth.user ? state.auth.user.className : null,\r\n    profileID: state.auth.user ? state.auth.user.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Dashboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { AudioOutlined } from '@ant-design/icons';\r\nconst { Search } = Input;\r\n\r\nexport default function SearchBox(props) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.handleListData(searchTerm.toLowerCase());\r\n  }, [searchTerm]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const onSearch = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__input\">\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onSearch={onSearch}\r\n          onChange={handleSearchChange}\r\n          enterButton\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\"/test-instructions\");\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n\r\n    //console.log();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">Available Test</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests && tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">Start: Oct 26 2020 12:14PM</p>\r\n                        <p className=\"time end\">End: Oct 29 2020 11:50PM</p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">Start: Oct 26 2020 12:14PM</p>\r\n                        <p className=\"time end\">End: Oct 29 2020 11:50PM</p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchTests } from \"../actions/testActions\";\r\nimport { selectedTest } from \"../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, studentClassName } = props;\r\n\r\n  const handleSelectedTest =(testData)=>{\r\n      props.selectedTest(testData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(studentClassName);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n       <TestList tests={tests} handleSelectedTest={handleSelectedTest} /> \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.tests.test,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\r\n    selectedTest: (testData) =>dispatch(selectedTest(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\r\n","export const TEST_SELECTED = \"TEST_SELECTED\";\r\nexport const SELECTED_TEST_RESULT = \"SELECTED_TEST_RESULT\";\r\n\r\nconst selectTest = testData => {\r\n    return {\r\n      type: TEST_SELECTED,\r\n      testData\r\n    };\r\n  };\r\n\r\n  const selectTestResult = testData => {\r\n    return {\r\n      type: SELECTED_TEST_RESULT,\r\n      testData\r\n    };\r\n  };\r\n\r\nexport const selectedTest = (data) => (dispatch) => {\r\n\r\n    dispatch(selectTest(data));\r\n  \r\n  };\r\n\r\n  export const selectedTestResult = (data) => (dispatch) => {\r\n\r\n    dispatch(selectTestResult(data));\r\n  \r\n  };","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction AttemptTest(props) {\r\n  const { studentClassName } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest studentClassName={studentClassName} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    studentClassName: state.auth.user ? state.auth.user.className : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AttemptTest);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\n// const SubMenu = Menu.SubMenu;\r\n// const MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst LeftMenu = (props) => {\r\n  const [isAuthenticated, setisAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setisAuthenticated(props.isAuthenticated);\r\n  }, [props]);\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userProfile\");\r\n    localStorage.removeItem(\"profileID\");\r\n    props.signOut();\r\n  };\r\n\r\n  const handleProfile = () => {};\r\n\r\n  const { md } = useBreakpoint();\r\n  const homeRoute = isAuthenticated ? \"/\" : \"signin\";\r\n  const testRoute = isAuthenticated ? \"/attempt-test\" : \"signup\";\r\n  const resultRoute = isAuthenticated ? \"/result\" : \"\";\r\n  const signOutRoute = isAuthenticated ? \"/signin\" : \"\";\r\n  const profileRoute = isAuthenticated ? \"/profile\" : \"\";\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <Menu mode={md ? \"horizontal\" : \"inline\"}>\r\n        <Menu.Item key=\"01\">\r\n          <NavLink to={homeRoute}>\r\n            {isAuthenticated ? \"Home\" : \"Sign In\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"02\">\r\n          <NavLink to={testRoute}>\r\n            {isAuthenticated ? \"Attempt Test\" : \"SignUp\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"03\" className={!isAuthenticated ? \"display-none\" : \"\"}>\r\n          <NavLink to={resultRoute}>{isAuthenticated ? \"Result\" : \"\"}</NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"05\" className={!isAuthenticated ? \"display-none\" : \"\"}>\r\n          <NavLink to={profileRoute} onClick={handleProfile}>\r\n            {isAuthenticated ? \"Profile\" : \"\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n      <div className=\"right-side\">\r\n        <NavLink\r\n          to={signOutRoute}\r\n          onClick={signOut}\r\n          className={!isAuthenticated ? \"display-none signout\" : \"signout\"}\r\n        >\r\n          {isAuthenticated ? \"Sign Out\" : \"\"}\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftMenu);\r\n","import React, { Component } from 'react';\r\nimport LeftMenu from './LeftMenu'\r\nimport { Drawer, Button } from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./Navbar.css\"\r\n\r\nclass Navbar extends Component {\r\n\tstate = {\r\n\t\tcurrent: 'mail',\r\n\t\tvisible: false\r\n\t}\r\n\tshowDrawer = () => {\r\n\t\tthis.setState({\r\n\t\t\tvisible: true,\r\n\t\t});\r\n\t};\r\n\r\n\tonClose = () => {\r\n\t\tthis.setState({\r\n\t\t\tvisible: false,\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<nav className=\"menuBar\">\r\n\t\t\t\t<div className=\"logo\">\r\n                    <Link to=\"/\">🎓 EMS</Link>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menuCon\">\r\n\t\t\t\t\t<div className=\"leftMenu\">\r\n\t\t\t\t\t\t<LeftMenu />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button className=\"barsMenu\" type=\"primary\" onClick={this.showDrawer}>\r\n\t\t\t\t\t\t<span className=\"barsBtn\"></span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\ttitle=\"Menu\"\r\n\t\t\t\t\t\tplacement=\"right\"\r\n\t\t\t\t\t\tclosable={false}\r\n\t\t\t\t\t\tonClose={this.onClose}\r\n\t\t\t\t\t\tvisible={this.state.visible}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<LeftMenu />\r\n\t\t\t\t\t</Drawer>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nconst { Search } = Input;\r\nexport default function SearchBox(props) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.handleListData(searchTerm.toLowerCase());\r\n  }, [searchTerm]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const onSearch = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__input\">\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onSearch={onSearch}\r\n          onChange={handleSearchChange}\r\n          enterButton\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\r\n      `/result/${selectedData.testName?.replace(/\\s+/g, \"-\").toLowerCase()}`\r\n    );\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n    //console.log();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">Attempted Test</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchAttemptTests } from \"../actions/testActions\";\r\nimport { selectedTestResult } from \"../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, profileID } = props;\r\n\r\n  const handleSelectedTest = (testData) => {\r\n    props.selectedTest(testData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n        <TestList tests={tests} handleSelectedTest={handleSelectedTest} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.tests.attemptedTest,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n    selectedTest: (testData) => dispatch(selectedTestResult(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction ResultWrapper(props) {\r\n  const { profileID } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest profileID ={profileID} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ResultWrapper);\r\n","import React from \"react\";\r\nimport { Row, Modal, Col, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TestInstruction.css\";\r\nimport { FaArrowCircleRight } from \"react-icons/fa\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction TestInstruction(props) {\r\n  //console.log(props.selectedTest);\r\n  const history = useHistory();\r\n  const { confirm } = Modal;\r\n  const {\r\n    outOfMarks,\r\n    questions,\r\n    minutes,\r\n    category,\r\n    className,\r\n    attempted,\r\n    testName,\r\n    rules,\r\n    _id: testID,\r\n  } = props.selectedTest;\r\n  let testRules;\r\n\r\n  if (rules) {\r\n    testRules = Object.values(rules[0]);\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    confirm({\r\n      title: \"Do you give test now?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Once you click OK , timer will start!\",\r\n      onOk() {\r\n        // console.log(props.selectedTest);\r\n        console.log(\"OK\");\r\n        history.push(\"/start-test\");\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={22} xl={22}>\r\n            <div className=\"instructions__wrapper\">\r\n              <Row justify=\"center\">\r\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} xl={12}>\r\n                  <div className=\"instructions__wrapper__left\">\r\n                    <p className=\"instructions__heading\">Test Instructions</p>\r\n                    <div className=\"test__info\">\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Test Name:</div>\r\n                        <div className=\"test__fields__Value\">{testName}</div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Total Questions:</div>\r\n                        <div className=\"test__fields__Value\">\r\n                          {questions?.length}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Allocated Time:</div>\r\n                        <div className=\"test__fields__Value\">\r\n                          {minutes} Minutes\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Category:</div>\r\n                        <div className=\"test__fields__Value\">{category}</div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Total Marks:</div>\r\n                        <div className=\"test__fields__Value\">{outOfMarks}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"test__instructions\">\r\n                      <p className=\"test__instructions__subheading\">\r\n                        Instructions\r\n                      </p>\r\n                      <div className=\"instructions\">\r\n                        {testRules?.map((rule, index) => (\r\n                          <p className=\"rule\" key={index}>\r\n                            <FaArrowCircleRight />{\" \"}\r\n                            <span className=\"rule__description\">{rule}</span>\r\n                          </p>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} xl={12}>\r\n                  <div className=\"instructions__wrapper__right\">\r\n                    <div className=\"ems__log__wrapper\">\r\n                      <img\r\n                        src=\"/ems-logo.png\"\r\n                        className=\"ems__logo\"\r\n                        alt=\"ems-logo\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"navigation__instructions__heading\">\r\n                      Navigation Buttons\r\n                    </p>\r\n                    <div className=\"navigation__instructions\">\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#449d44\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Next\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Next: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#449d44\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Previous\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Next: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#ec971f\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Flag\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Flag: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#ff4d4f\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          End Test\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          End Test: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"select__button\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={handleButtonClick}\r\n                        disabled={attempted}\r\n                      >\r\n                        Continue\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestInstruction);\r\n","import React from \"react\";\r\nimport { Row, Col, Divider, Progress } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ShowResult.css\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nfunction ShowResult(props) {\r\n  const { testName, date } = props.selectedTest;\r\n  const testInfo = props.selectedTest[0];\r\n  let marks,\r\n    name,\r\n    rightAnswers,\r\n    submitMinutes,\r\n    totalMarks,\r\n    wrongAnswers,\r\n    totalAttempt;\r\n\r\n  if (testInfo) {\r\n    marks = testInfo.correct;\r\n    // name = testInfo.name;\r\n    rightAnswers = testInfo.correct;\r\n    submitMinutes = testInfo.submitMinutes;\r\n    totalMarks = testInfo.totalMarks;\r\n    wrongAnswers = testInfo.wrong;\r\n    totalAttempt = rightAnswers - -wrongAnswers;\r\n  }\r\n  const submitDate = new Date(date);\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <div className=\"result__wrapper\">\r\n              <div className=\"result__wrapper__header\">\r\n                {/* <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Name: </div>\r\n                  <div className=\"result__test__name__field\">{name}</div>\r\n                </div> */}\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Test Name: </div>\r\n                  <div className=\"result__test__name__field\">{testName}</div>\r\n                </div>\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Time Taken: </div>\r\n                  <div className=\"result__test__name__field\">\r\n                    {submitMinutes ? submitMinutes : \"XX\"} minutes\r\n                  </div>\r\n                </div>\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">\r\n                    Test Submitted Date:{\" \"}\r\n                  </div>\r\n                  <div className=\"result__test__name__field\">\r\n                    {submitDate.toLocaleDateString(\"en-US\")}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"result__wrapper__body\">\r\n                <div className=\"percentage\">\r\n                  <div className=\"percentage__heading\">Your Score</div>\r\n                  <Progress\r\n                    percent={Math.floor((marks / totalMarks) * 100)}\r\n                    status=\"active\"\r\n                  />\r\n                </div>\r\n                <div className=\"marks__info\">\r\n                  <div className=\"marks__chart\">\r\n                    <Chart\r\n                      width={\"100%\"}\r\n                      height={\"100%\"}\r\n                      chartType=\"PieChart\"\r\n                      loader={<div>Loading Chart</div>}\r\n                      data={[\r\n                        [\"Task\", \"Hours per Day\"],\r\n                        [\"Correct\", marks / 10],\r\n                        [\"Wrong\", totalMarks / 10 - marks / 10],\r\n                      ]}\r\n                      options={{\r\n                        title: \"Marks Distribution\",\r\n                        // Just add this option\r\n                        pieHole: 0.45,\r\n                      }}\r\n                      rootProps={{ \"data-testid\": \"3\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"marks\">\r\n                    <h2 className=\"inlarge\">Marks</h2>\r\n                    <div className=\"marksBox\">\r\n                      <div className=\"obtained__marks\">\r\n                        {marks} | {totalMarks}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"attempted\">\r\n                  <div className=\"total__attempted\">\r\n                    <div className=\"percentage\">\r\n                      <div className=\"percentage__heading\">\r\n                        Attempted: {totalAttempt}{\" \"}\r\n                      </div>\r\n                      <Progress\r\n                        percent={Math.floor((totalAttempt / totalMarks) * 100)}\r\n                        status=\"active\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"correct__attempted\">\r\n                    <div className=\"percentage\">\r\n                      <div className=\"percentage__heading\">\r\n                        Correct Answers: {rightAnswers}\r\n                      </div>\r\n                      <Progress\r\n                        percent={Math.floor((rightAnswers / totalMarks) * 100)}\r\n                        status=\"active\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestResultData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ShowResult);\r\n","export const UPDATE_ATTEMPT_TEST_REQUEST = \"UPDATE_ATTEMPT_TEST_REQUEST\";\r\nexport const UPDATE_ATTEMPT_TEST_SUCCESS = \"UPDATE_ATTEMPT_TEST_SUCCESS\";\r\nexport const UPDATE_ATTEMPT_TEST_FAILURE = \"UPDATE_ATTEMPT_TEST_FAILURE\";\r\n\r\nconst requestUpdateTimeSpent = () => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveUpdateTimeSpent = (time) => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_SUCCESS,\r\n    time,\r\n  };\r\n};\r\n\r\nconst updateTimeSpentError = () => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nexport const updateTimeSpentByStudent = (values) => (dispatch) => {\r\n  dispatch(requestUpdateTimeSpent());\r\n  let {\r\n    profileID,\r\n    testName,\r\n    completed,\r\n    minutes: totalTime,\r\n    _id: testID,\r\n    updatingAttemptedMinutes,\r\n  } = values;\r\n\r\n  updatingAttemptedMinutes =\r\n    updatingAttemptedMinutes !== 0 ? updatingAttemptedMinutes : 0;\r\n  console.log(parseInt(updatingAttemptedMinutes));\r\n  let subtractTime =\r\n    updatingAttemptedMinutes == 0 ? parseInt(totalTime) : parseInt(0);\r\n\r\n  let attemptedTime = Math.abs(\r\n    subtractTime - parseInt(updatingAttemptedMinutes - 1)\r\n  );\r\n\r\n  const data = { profileID, testName, completed, attemptedTime, totalTime };\r\n  console.log(completed, totalTime, data.attemptedTime);\r\n\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  fetch(`/student/update-test-status/${testID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        data.obj.testStatus.map((test, index) => {\r\n          if (test.testID === testID) {\r\n            localStorage.setItem(testID, test.attemptedTime);\r\n          }\r\n        });\r\n\r\n        console.log(data.obj);\r\n        dispatch(receiveUpdateTimeSpent(localStorage.getItem(testID)));\r\n        // history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      dispatch(updateTimeSpentError());\r\n    });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CountdownTimer from \"react-component-countdown-timer\";\r\n\r\nexport default function Counter(props) {\r\n  const { testID, totalMinutes } = props;\r\n  let time;\r\n  if (JSON.parse(localStorage.getItem(`${testID}`)) == null) {\r\n    time = parseInt(totalMinutes) * 60;\r\n  } else {\r\n    const testData = JSON.parse(localStorage.getItem(`${testID}`));\r\n    let remainingTime = testData.rM;\r\n    time = parseInt(remainingTime * 60);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CountdownTimer count={time} hideDay={true} />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class LeftSide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.accordionContent = [];\r\n    this.state = {\r\n      questionsData: [],\r\n      selectRef: undefined,\r\n      activateQue: 0,\r\n      leftActiveQue: 0,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      questionsData: props.questionsData,\r\n      activateQue: props.activateQue,\r\n      footerClick: props.footerClick,\r\n    };\r\n  }\r\n\r\n  changeBg = (activatedQue, answered, footerClicked) => {\r\n    if (this.state.selectRef) {\r\n      this.state.selectRef.classList.remove(\"selected\");\r\n      if (answered == false) {\r\n        this.state.selectRef.classList.remove(\"answered\");\r\n      }\r\n    }\r\n    if (this.accordionContent[activatedQue])\r\n      this.accordionContent[activatedQue].classList.add(\"selected\");\r\n    if (answered && footerClicked == false) {\r\n      this.accordionContent[activatedQue].classList.add(\"answered\");\r\n    }\r\n    this.setState({\r\n      selectRef: this.accordionContent[activatedQue],\r\n    });\r\n  };\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextProps === this.props &&\r\n      nextProps.activateQue == this.props.activateQue\r\n    ) {\r\n      return false;\r\n    } else if (nextProps.selectRef !== this.props.selectRef) {\r\n      return false;\r\n    } else {\r\n      this.changeBg(\r\n        nextProps.activateQue,\r\n        nextProps.answered,\r\n        nextProps.footerClick\r\n      );\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  setFlag = () => {\r\n    this.state.selectRef.classList.add(\"add-flag\");\r\n  };\r\n\r\n  render() {\r\n    const handleClick = (e, index) => {\r\n      if (this.state.selectRef) {\r\n        this.state.selectRef.classList.remove(\"selected\");\r\n      }\r\n\r\n      this.setState({\r\n        selectRef: this.accordionContent[index],\r\n        leftActiveQue: index,\r\n      });\r\n      this.accordionContent[index].classList.add(\"selected\");\r\n\r\n      this.props.handleQuestionClick(index);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"questions__wrapper\">\r\n          {this.state.questionsData &&\r\n            this.state.questionsData.map((question, index) => (\r\n              <div\r\n                className={`question`}\r\n                ref={(ref) => (this.accordionContent[index] = ref)}\r\n                onClick={(e) => handleClick(e, index)}\r\n                key={index}\r\n              >\r\n                {index - -1}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Radio, Input } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { submitTest } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\n\r\nclass RightSide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activateQue: 0,\r\n      questionsData: [],\r\n      changeIndex: 0,\r\n      questionIndex: 0,\r\n      selectedAnswers: Array.apply(undefined, Array(5)),\r\n      value: null,\r\n      testID: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      questionsData: props.questionsData,\r\n      questionIndex: props.questionIndex,\r\n      testID: props.testID,\r\n    };\r\n  }\r\n\r\n  handleClearResponse = (index) => {\r\n    let newSelectedAnswers = this.state.selectedAnswers;\r\n    console.log(newSelectedAnswers[index]);\r\n    let blankClearAttempt =\r\n      newSelectedAnswers[index] === undefined ? true : false;\r\n\r\n    newSelectedAnswers[index] = undefined;\r\n    this.setState({\r\n      selectedAnswers: newSelectedAnswers,\r\n    });\r\n    this.props.handleClearResponse(index, blankClearAttempt);\r\n  };\r\n  onChange = (e, index) => {\r\n    let newSelectedAnswers = this.state.selectedAnswers;\r\n    if (newSelectedAnswers[index] === undefined) {\r\n      this.props.questionAnswered(index, e.target.value, false);\r\n    } else {\r\n      this.props.questionAnswered(index, e.target.value, true);\r\n    }\r\n    newSelectedAnswers[index] = e.target.value;\r\n    this.setState({\r\n      value: e.target.value,\r\n      selectedAnswers: newSelectedAnswers,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  changeActivatedQueInChild = (changeActivatedQue) => {\r\n    if (changeActivatedQue === \"next__question\") {\r\n      console.log(\"insdie if\");\r\n      console.log(this.state.questionsData.length, this.state.activateQue);\r\n      if (this.state.activateQue < this.state.questionsData.length - 1) {\r\n        this.setState({\r\n          activateQue: this.state.activateQue + 1,\r\n        });\r\n        this.props.changeParentActivatedQue(this.state.activateQue + 1);\r\n      }\r\n    } else if (changeActivatedQue === \"previous__question\") {\r\n      if (this.state.activateQue > 0) {\r\n        this.setState({\r\n          activateQue: this.state.activateQue - 1,\r\n        });\r\n        this.props.changeParentActivatedQue(this.state.activateQue - 1);\r\n      }\r\n    } else if (changeActivatedQue === \"flag__question\") {\r\n    } else if (changeActivatedQue === \"end__test\") {\r\n    } else {\r\n      this.setState({\r\n        activateQue: changeActivatedQue,\r\n      });\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n  submitTest = () => {\r\n    const { userAnswers, answers, testName, testID, profileID } = this.props;\r\n    let correct = 0,\r\n      wrong = 0,\r\n      unanswered = 0,\r\n      totalMarks = answers.length,\r\n      dataToSubmit;\r\n\r\n    userAnswers.map((element, index) => {\r\n      if (element === undefined) {\r\n        unanswered = unanswered + 1;\r\n      } else if (element !== answers[index]) {\r\n        wrong = wrong + 1;\r\n      } else {\r\n        correct = correct + 1;\r\n      }\r\n      dataToSubmit = {\r\n        testID,\r\n        correct,\r\n        unanswered,\r\n        totalMarks,\r\n        profileID,\r\n        testName,\r\n        wrong,\r\n      };\r\n    });\r\n    this.props.submitTest(dataToSubmit);\r\n    this.props.signOut();\r\n    return;\r\n  };\r\n  render() {\r\n    console.log(this.state.selectedAnswers);\r\n    const radioStyle = {\r\n      display: \"block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"descripiton__wrapper\">\r\n          <div className=\"question__no\">\r\n            Question {this.state.activateQue + 1} out of {5}\r\n          </div>\r\n          {this.state.questionsData &&\r\n            this.state.questionsData.map((question, index) => {\r\n              if (this.state.activateQue === index) {\r\n                return (\r\n                  <div className=\"description__box\" key={index}>\r\n                    <div className=\"descripiton\"> {question.description}</div>\r\n                    <div className=\"options\">\r\n                      <Radio.Group\r\n                        onChange={(e) => this.onChange(e, index)}\r\n                        value={this.state.selectedAnswers[index]}\r\n                      >\r\n                        <Radio style={radioStyle} value={1}>\r\n                          {question.options[0].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={2}>\r\n                          {question.options[1].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={3}>\r\n                          {question.options[2].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={4}>\r\n                          {question.options[3].option}\r\n                        </Radio>\r\n                      </Radio.Group>\r\n                      <div\r\n                        className=\"clear__response\"\r\n                        onClick={() => this.handleClearResponse(index)}\r\n                      >\r\n                        {<CloseOutlined />} Clear Response\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitTest: (data) => dispatch(submitTest(data)),\r\n    signOut: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSide);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Footer extends Component {\r\n  handleNext = (e) => {\r\n    //this.props.handleNextButton()\r\n    // console.log(e.currentTarget.classList[0])\r\n    this.props.handleFooterButtons(e.currentTarget.classList[0]);\r\n  };\r\n  submitTest = () => {\r\n    this.props.handleSubmitTest();\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"footer__wrapper\">\r\n          <div className=\"left__footer\">\r\n            <div\r\n              className=\"previous__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Previous\r\n            </div>\r\n            <div\r\n              className=\"flag__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Flag\r\n            </div>\r\n            <div\r\n              className=\"next__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Next\r\n            </div>\r\n          </div>\r\n          <div className=\"right__footer\">\r\n            <div className=\"end__test box\" onClick={this.submitTest}>\r\n              End Test\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\r\nimport \"./HandleLiveTest.css\";\r\nimport LeftSide from \"./LeftSide\";\r\nimport RightSide from \"./RightSide\";\r\nimport Footer from \"./Footer\";\r\nimport { questions } from \"./mockData\";\r\nimport Counter from \"./Counter\";\r\n\r\nclass HandleLiveTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      testID: undefined,\r\n      totalMinutes: undefined,\r\n      questionsData: [],\r\n      answers: [],\r\n      totalScore: 0,\r\n      footerClick: false,\r\n      activateQue: 0,\r\n      totalAnswered: 0,\r\n      answered: false,\r\n      totalPending: 5,\r\n      totalFlagged: 0,\r\n      flag: false,\r\n      questionIndex: 0,\r\n      testName: null,\r\n      userAnswers: Array.apply(undefined, Array(5)),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //  const answers = question\r\n    // make a call using redux\r\n\r\n    this.setState({\r\n      questionsData: this.props.selectedTest.questions,\r\n      // questionsData:questions,\r\n      answers: this.props.selectedTest.answers,\r\n      testID: this.props.testID,\r\n      testName: this.props.selectedTest.testName,\r\n    });\r\n    // fire function given by redux\r\n  }\r\n\r\n  changeActivatedQueFromFooter = (changeActivatedQue) => {\r\n    if (changeActivatedQue !== \"flag__question\") {\r\n      this.setState({\r\n        footerClick: true,\r\n      });\r\n      this.child.changeActivatedQueInChild(changeActivatedQue);\r\n    } else {\r\n    }\r\n  };\r\n  handleSubmitTest = () => {\r\n    this.child.submitTest();\r\n  };\r\n  changeParentActivatedQue = (index) => {\r\n    this.setState({\r\n      activateQue: index,\r\n      footerClick: true,\r\n    });\r\n  };\r\n\r\n  handleFooterButtons = (buttonClicked) => {\r\n    this.changeActivatedQueFromFooter(buttonClicked);\r\n  };\r\n\r\n  handleClearResponse = (index, blankClearAttempt) => {\r\n    if (!blankClearAttempt) {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = undefined;\r\n      this.setState({\r\n        totalAnswered: this.state.totalAnswered - 1,\r\n        totalPending: this.state.totalPending + 1,\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: false,\r\n      });\r\n    }\r\n  };\r\n  questionAnswered = (index, option, changed) => {\r\n    if (!changed) {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = option;\r\n      this.setState({\r\n        totalAnswered: this.state.totalAnswered + 1,\r\n        totalPending: this.state.totalPending - 1,\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: true,\r\n      });\r\n    } else {\r\n      // answers array\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = option;\r\n      this.setState({\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: true,\r\n      });\r\n    }\r\n  };\r\n  handleQuestionClick = (index) => {\r\n    this.child.changeActivatedQueInChild(index);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.selectedTest);\r\n    return (\r\n      <>\r\n        <div className=\"question_board\">\r\n          <div className=\"left__side\">\r\n            <div className=\"test__info\">\r\n              <div className=\"username\"></div>\r\n              <div className=\"test__name\">\r\n                TestName: <span className=\"danger\">{this.props.testName}</span>\r\n              </div>\r\n              <div className=\"total__minutes\">\r\n                Total Minutes:{\" \"}\r\n                <span className=\"danger\">{this.props.totalMinutes}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"questions__status\">\r\n              <div className=\"total__answered box\">\r\n                <span className=\"count__answered\">\r\n                  {this.state.totalAnswered}{\" \"}\r\n                </span>\r\n                Answered\r\n              </div>\r\n              <div className=\"total__flagged box\">\r\n                <span className=\"count__flagged\">0 </span>Flagged\r\n              </div>\r\n              <div className=\"total__pending box\">\r\n                <span className=\"count__pending\">\r\n                  {this.state.totalPending}{\" \"}\r\n                </span>\r\n                Pending\r\n              </div>\r\n            </div>\r\n            <LeftSide\r\n              questionsData={this.state.questionsData}\r\n              handleQuestionClick={this.handleQuestionClick}\r\n              activateQue={this.state.activateQue}\r\n              footerClick={this.state.footerClick}\r\n              onRef={(ref) => (this.child = ref)}\r\n              answered={this.state.answered}\r\n            />\r\n          </div>\r\n          <RightSide\r\n            questionsData={this.state.questionsData}\r\n            questionAnswered={this.questionAnswered}\r\n            questionIndex={this.state.questionIndex}\r\n            handleClearResponse={this.handleClearResponse}\r\n            onRef={(ref) => (this.child = ref)}\r\n            changeParentActivatedQue={this.changeParentActivatedQue}\r\n            userAnswers={this.state.userAnswers}\r\n            answers={this.state.answers}\r\n            testID={this.state.testID}\r\n            testName={this.state.testName}\r\n          />\r\n          <div className=\"footer\">\r\n            <Footer\r\n              handleFooterButtons={this.handleFooterButtons}\r\n              handleSubmitTest={this.handleSubmitTest}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HandleLiveTest);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\r\nimport Counter from \"./Counter\";\r\nimport HandleLiveTest from \"./HandleLiveTest\";\r\n\r\nclass TestPreview extends Component {\r\n  state = {\r\n    testName: this.props.selectedTest.testName,\r\n    minutes: this.props.selectedTest.minutes,\r\n    _id: this.props.selectedTest._id,\r\n    intervalId: null,\r\n    timer: this.props.timer,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadData(this.state._id);\r\n    const intervalID = setInterval(this.loadData.bind(this), 60000);\r\n    this.setState({ intervalId: intervalID, timer: this.state.timer });\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.intervalId);\r\n  }\r\n\r\n  loadData() {\r\n    try {\r\n      //   let testName, minutes, _id;\r\n      let testName, tM, _id, rM;\r\n      if (JSON.parse(localStorage.getItem(this.state._id)) === null) {\r\n        testName = this.state.testName;\r\n        tM = this.state.minutes;\r\n        _id = this.state._id;\r\n        rM = tM;\r\n        localStorage.setItem(\r\n          `${_id}`,\r\n          JSON.stringify({ testName, _id, tM, rM })\r\n        );\r\n      } else {\r\n        const testData = JSON.parse(localStorage.getItem(`${this.state._id}`));\r\n        console.log(testData);\r\n        let { testName, tM, _id, rM } = testData;\r\n        rM = rM - 1;\r\n        localStorage.setItem(\r\n          `${_id}`,\r\n          JSON.stringify({ testName, _id, tM, rM })\r\n        );\r\n      }\r\n\r\n      //   const profileID = localStorage.getItem(\"profileID\"),\r\n      //     completed = false;\r\n      //   const testData = JSON.parse(localStorage.getItem(\"trash\"));\r\n      //   let updatingAttemptedMinutes = localStorage.getItem(testData._id);\r\n\r\n      //   const data = {\r\n      //     profileID,\r\n      //     testName,\r\n      //     _id,\r\n      //     completed,\r\n      //     minutes,\r\n      //     updatingAttemptedMinutes,\r\n      //   };\r\n      //   //console.log(this.props.selectedTest, \"props\")\r\n      //   if (_id) {\r\n      //    // this.props.updateTimer(data);\r\n      //   }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.timer);\r\n    return (\r\n      <>\r\n        <Counter testID={this.state._id} totalMinutes={this.state.minutes} />\r\n        <HandleLiveTest\r\n          testID={this.state._id}\r\n          totalMinutes={this.state.minutes}\r\n          testName={this.state.testName}\r\n          testName={this.state.testName}\r\n          totalMinutes={this.state.minutes}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    timer: state.userAttemptedTime.attemptedTime,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPreview);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TestPreview from \"./TestPreview\";\r\nfunction TestPreviewWrapper(props) {\r\n  const { selectedTest } = props;\r\n  const isSelected = Object.keys(selectedTest).length == 0 ? false : true;\r\n  return (\r\n    <>{isSelected ? <TestPreview /> : <p>Please select a test first</p>}</>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestPreviewWrapper);\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"../logIn/Login\";\nimport Signup from \"../signUp/Signup\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"../protectedRoute/ProtectedRoute\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport AttemptTest from \"../attemptTest/AttemptTest\";\nimport Navbar from \"../navbar\";\nimport Result from \"../result/ResultWrapper\";\nimport TestInstruction from \"../TestInstructions/TestInstruction\";\nimport IndividualResult from \"../result/ShowResult\";\nimport TestPreviewWrapper from \"../testPreview/TestPreviewWrapper\";\nimport { connect } from \"react-redux\";\nimport { Modal} from \"antd\";\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { useHistory } from \"react-router-dom\";\nfunction App(props) {\n  // useEffect(() => {\n  //  window.addEventListener('contextmenu',(e)=>{\n  //   e.preventDefault();\n  //  });\n  //  window.addEventListener('keydown', (e)=>{\n  //    console.log(e);\n  //    if(e.key==\"F12\"){\n  //     e.preventDefault();\n  //    }\n  //  })\n  // }, []);\n\n  const { selectedTestName } = props;\n  const { confirm } = Modal;\n  const history = useHistory();\n  const onLeaveComponent =()=>{\n    confirm({\n        title: 'Do you really want to quit the test?',\n        icon: <ExclamationCircleOutlined />,\n        content: 'Once you click ok test will stop',\n        onOk() {\n         // console.log(props.selectedTest);\n          console.log('OK');\n          history.push(\"/\");\n        },\n        onCancel() {\n          console.log('Cancel');\n        },\n      });\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact={true} path={\"/signin\"} component={Login} />\n          <Route exact={true} path=\"/signup\" component={Signup} />\n          <ProtectedRoute exact={true} path=\"/\" component={Dashboard} />\n          <ProtectedRoute\n            exact={true}\n            path=\"/attempt-test\"\n            component={AttemptTest}\n          />\n          <ProtectedRoute exact={true} path=\"/result\" component={Result} />\n          <ProtectedRoute\n            exact={true}\n            path={`/result/${selectedTestName}`}\n            component={IndividualResult}\n          />\n          <ProtectedRoute\n            exact={true}\n            path=\"/test-instructions\"\n            component={TestInstruction}\n          />\n          <ProtectedRoute\n            exact={true}\n            path=\"/start-test\"\n            onLeave={ onLeaveComponent }\n            component={TestPreviewWrapper}\n          />\n           <ProtectedRoute component={Login} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedTestName: state.selectedTest.selectedTestResultData.testName\n      ?.replace(/\\s+/g, \"-\")\n      .toLowerCase(),\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  VERIFY_REQUEST,\r\n  VERIFY_SUCCESS,\r\n  SEND_PASS_RESET_SUCCESS,\r\n  SEND_PASS_RESET,\r\n  SEND_PASS_RESET_ERROR,\r\n} from \"../actions/authActions\";\r\n// import storageListner from \"../storageListener/localStorageListener\";\r\n\r\nconst initialState = {\r\n    isLoggingIn: false,\r\n    isSigningUp: false,\r\n    isLoading: false,\r\n    isLoggingOut: false,\r\n    isVerifying: false,\r\n    loginError: false,\r\n    signupError: false,\r\n    logoutError: false,\r\n    isAuthenticated: (localStorage.getItem(\"token\"))?(true):false,\r\n    sendPassResetSuccess: false,\r\n    sendPassResetError: false,\r\n    profileID:localStorage.getItem('profileID'),\r\n    user: ((JSON.parse(localStorage.getItem('userProfile'))?(JSON.parse(localStorage.getItem('userProfile'))):{})),\r\n  }\r\n\r\nexport default function (state = initialState, action) {\r\n    \r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      console.log(\"login request fired\")\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        isLoading: true,\r\n        loginError: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoading: false,\r\n        isAuthenticated: true,\r\n        user: action.user,\r\n        profileID: action.profileID\r\n      };\r\n    case LOGIN_FAILURE:\r\n      console.log(\"login failure fired\")\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        loginError: true,\r\n      };\r\n\r\n    case SIGN_UP_REQUEST:\r\n      return {\r\n        ...state,\r\n        isSigningUp: true,\r\n        isLoading: true,\r\n        signupError: false,\r\n      };\r\n\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isLoading: false,\r\n        signupError: false,\r\n        isAuthenticated: true,\r\n        user: action.user,\r\n      };\r\n\r\n    case SIGN_UP_FAILURE:\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isLoading: false,\r\n        signupError: action.errMess,\r\n      };\r\n\r\n    case SEND_PASS_RESET:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        sendPassResetSuccess: false,\r\n        sendPassResetError: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        sendPassResetSuccess: true,\r\n        sendPassResetError: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        sendPassResetSuccess: false,\r\n        sendPassResetError: action.errMess,\r\n      };\r\n\r\n    case LOGOUT_REQUEST:\r\n      return { ...state, isLoggingOut: true, logoutError: false };\r\n\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isAuthenticated: false,\r\n        user: {},\r\n      };\r\n\r\n    case LOGOUT_FAILURE:\r\n      return { ...state, isLoggingOut: false, logoutError: true };\r\n\r\n    case VERIFY_REQUEST:\r\n      return { ...state, isVerifying: true, verifyingError: false };\r\n\r\n    case VERIFY_SUCCESS:\r\n      return { ...state, isVerifying: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_TEST_REQUEST,\r\n  FETCH_TEST_SUCCESS,\r\n  FETCH_ATTEMPT_TEST_SUCCESS,\r\n  FETCH_TEST_FAILURE,\r\n  SUBMIT_TEST_FAILURE,\r\n  SUBMIT_TEST_SUCCESS,\r\n} from \"../actions/testActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isLoadingTest: false,\r\n  isLoadingAttemptedTest: false,\r\n  fetchingError: false,\r\n  isFetched: false,\r\n  testSubmitted: false,\r\n  testSubmitError: false,\r\n  test: [],\r\n  attemptedTest: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        isLoadingAttemptedTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case FETCH_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        test: action.tests,\r\n      };\r\n    case FETCH_ATTEMPT_TEST_SUCCESS:\r\n      // console.log(action.tests)\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingAttemptedTest: false,\r\n        attemptedTest: action.tests[0].attemptedTest,\r\n      };\r\n    case FETCH_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isLoadingTest: false,\r\n        isLoadingAttemptedTest: false,\r\n        fetchError: true,\r\n      };\r\n    case SUBMIT_TEST_SUCCESS:\r\n      localStorage.removeItem(action.testID);\r\n      return {\r\n        ...state,\r\n        testSubmitted: true,\r\n        testSubmitError: false,\r\n      };\r\n    case SUBMIT_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        testSubmitted: false,\r\n        testSubmitError: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { TEST_SELECTED, SELECTED_TEST_RESULT } from \"../actions/selectActions\";\r\n\r\nconst initialState = {\r\n  selectedTestData: {},\r\n  selectedTestResultData: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TEST_SELECTED:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        selectedTestData: action.testData,\r\n      };\r\n\r\n      case SELECTED_TEST_RESULT:\r\n        // console.log(\"login success fired\", action.obj)\r\n        return {\r\n          ...state,\r\n          selectedTestResultData: action.testData,\r\n        };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { UPDATE_ATTEMPT_TEST_REQUEST, UPDATE_ATTEMPT_TEST_SUCCESS, UPDATE_ATTEMPT_TEST_FAILURE } from \"../actions/attemptTestActions\";\r\n\r\nconst initialState = {\r\n  attemptedTime: 0,\r\n  isFetching:false,\r\n  isFetched:false,\r\n  isFetchingError:false,\r\n  initializeTimer:false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_ATTEMPT_TEST_REQUEST:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n\r\n      case UPDATE_ATTEMPT_TEST_SUCCESS:\r\n        // console.log(\"login success fired\", action.obj)\r\n        //console.log(action.data);\r\n        const checker = state.initializeTimer;\r\n        return {\r\n          ...state,\r\n          isFetched: true,\r\n          isFetching: false,\r\n          attemptedTime: action.time,\r\n          initializeTimer:true,\r\n        };\r\n    case UPDATE_ATTEMPT_TEST_FAILURE:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isFetchingError: true,\r\n\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport authReducer from './authReducer';\r\nimport testReducer from './testReducer';\r\nimport selectTestReducer from \"./selectReducer\";\r\nimport attemptedTestReducer from \"./attemptedTestReducer\";\r\n\r\nexport default combineReducers ({\r\n  auth: authReducer,\r\n  tests: testReducer,\r\n  selectedTest: selectTestReducer,\r\n  userAttemptedTime: attemptedTestReducer,\r\n});","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducers/index'\r\nimport logger from 'redux-logger'\r\n\r\nconst allEnhancers = compose (\r\n  applyMiddleware (thunk,logger)\r\n);\r\n\r\nconst store = createStore (reducer, allEnhancers);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}