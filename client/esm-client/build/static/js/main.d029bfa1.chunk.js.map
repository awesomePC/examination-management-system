{"version":3,"sources":["logIn/Login.js","actions/authActions.js","signUp/Signup.js","protectedRoute/ProtectedRoute.js","actions/testActions.js","dashboard/TestCard.js","dashboard/ResultCard.js","dashboard/Dashboard.js","Teacher/Dashboard/Classes.js","actions/classesActions.js","Teacher/Dashboard/AssignedTests.js","Teacher/Dashboard/Dashboard.js","attemptTest/SearchBox.js","attemptTest/TestList.js","attemptTest/SelectTest.js","actions/selectActions.js","attemptTest/AttemptTest.js","Roles/roles.js","navbar/LeftMenu.js","navbar/index.js","result/SearchBox.js","result/TestList.js","result/SelectTest.js","result/ResultWrapper.js","TestInstructions/TestInstruction.js","result/ShowResult.js","actions/attemptTestActions.js","testPreview/Counter.js","testPreview/LeftSide.js","testPreview/RightSide.js","testPreview/Footer.js","testPreview/HandleLiveTest.js","testPreview/TestPreview.js","testPreview/TestPreviewWrapper.js","profile/Profile.js","Teacher/CreateTest/Rules.js","Teacher/CreateTest/Questions.js","Teacher/CreateTest/RenderData.js","actions/TeacherActions.js","Teacher/CreateTest/CreateTest.js","Teacher/AssigenedTest/SearchBox.js","Teacher/AssigenedTest/TestList.js","Teacher/AssigenedTest/SelectTest.js","Teacher/AssigenedTest/AssignedTestsWrapper.js","Teacher/TestStatus/StudentStatus.js","Teacher/TestStatus/TestStatus.js","App/App.js","serviceWorker.js","reducers/authReducer.js","reducers/testReducer.js","reducers/selectReducer.js","reducers/attemptedTestReducer.js","reducers/classesReducer.js","reducers/teacherReducer.js","reducers/index.js","store/index.js","index.js"],"names":["connect","state","isAuthenticated","auth","isLoading","dispatch","sendLoginRequest","values","type","requestOptions","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","fetch","then","response","json","data","user","profileID","token","setItem","payload","catch","error","loginUser","props","history","useHistory","Typography","Title","useEffect","push","justify","align","className","xs","sm","md","lg","name","initialValues","remember","onFinish","onFinishFailed","errorInfo","console","log","Item","rules","required","message","placeholder","Password","style","textAlign","fontWeight","marginBottom","to","minWidth","loading","htmlType","accountCreated","sendSignUpRequest","errMess","signUpUser","sendUserAccountCreated","useState","showSelect","setShowSelect","Option","Select","notification","open","description","duration","defaultValue","onSelect","select","optionData","value","disabled","ProtectedRoute","Component","this","component","userInfo","pathname","React","testSubmitted","testID","fetchAttemptTests","a","tests","obj","fetchTests","isLoadingTest","test","classID","studentClassName","trimLength","length","slice","reverse","map","index","key","testName","Array","fill","item","i","Avatar","active","size","shape","Input","isLoadingAttemptedTest","attemptedTest","backgroundColor","gutter","xl","classesList","classesData","classes","fetchClasses","filteredDupicates","filter","v","findIndex","t","receiveClasses","individualClass","fetchTeacherTests","Dashboard","Search","SearchBox","searchTerm","setSearchTerm","handleListData","toLowerCase","onSearch","onChange","e","target","enterButton","TestList","setTests","searchTests","setSearchTests","searching","setSearching","selectRef","selectedData","handleSelectTest","classList","remove","currentTarget","add","includes","onClick","handleSelectedTest","selectedTest","testData","Roles","useBreakpoint","Grid","signOut","setisAuthenticated","location","useLocation","role","homeRoute","testRoute","resultRoute","signOutRoute","profileRoute","createTestRoute","assignedTestRoute","display","mode","removeItem","Navbar","current","visible","showDrawer","setState","onClose","title","placement","closable","replace","selectedTestData","testRules","confirm","Modal","outOfMarks","questions","minutes","category","attempted","_id","rule","src","alt","icon","ExclamationCircleOutlined","content","onOk","onCancel","selectedTestResultData","marks","rightAnswers","submitMinutes","totalMarks","totalAttempt","date","testInfo","correct","wrong","submitDate","Date","toLocaleDateString","percent","Math","floor","status","width","height","chartType","loader","options","pieHole","rootProps","updateTimeSpentByStudent","completed","totalTime","updatingAttemptedMinutes","parseInt","subtractTime","attemptedTime","abs","testStatus","time","Counter","totalMinutes","parse","remainingTime","rM","count","hideDay","onEnd","handleCounter","LeftSide","changeBg","activatedQue","answered","footerClicked","accordionContent","flagQuestion","setFlag","questionsData","undefined","activateQue","leftActiveQue","nextProps","nextState","flag","footerClick","flagClicked","question","ref","handleQuestionClick","handleClick","RightSide","handleClearResponse","newSelectedAnswers","selectedAnswers","blankClearAttempt","questionAnswered","changeActivatedQueInChild","changeActivatedQue","changeParentActivatedQue","submitTest","dataToSubmit","userAnswers","answers","firstName","lastName","unanswered","element","changeIndex","questionIndex","apply","onRef","radioStyle","lineHeight","Group","option","CloseOutlined","postedData","submitBy","Footer","handleNext","handleFooterButtons","handleSubmitTest","HandleLiveTest","changeActivatedQueFromFooter","child","triggerFlag","submitTestOnCounterEnd","buttonClicked","updatedUserAnswers","totalAnswered","totalPending","changed","totalScore","totalFlagged","counterEnd","click","updateTimer","TestPreview","intervalId","timer","clickChild","loadData","intervalID","setInterval","bind","clearInterval","tM","userAttemptedTime","isSelected","Object","keys","Profile","submitForm","isVerified","email","phone","section","verfied","notVerfied","xxl","margin","readonly","userisVerified","Rules","setRule","submitInput","addRule","questionDescripiton","setQuestionDescripiton","opiton1","setOption1","opiton2","setOption2","opiton3","setOption3","opiton4","setOption4","answer","setAnswer","TextArea","questionData","addQuestion","min","max","RenderData","ruleData","clickedRule","fontSize","CreateTest","sendData","teacherId","teacherID","testCreated","handleSelect","handleDeleteRule","Removeindex","handleDeleteQuestion","openNotification","testCreatedFalse","teacher","assignedTests","fetchAssignedTests","StudentStatus","student","toUpperCase","selectedAssignedTestData","students","selectedTestName","selectedAssignedTestName","setCount","window","addEventListener","preventDefault","success","exact","path","Login","Signup","TeacherDashboard","StudentDashboard","AttemptTest","Result","IndividualResult","TestInstruction","TestPreviewWrapper","AssignedTestsWrapper","TestStatus","Boolean","hostname","match","initialState","isLoggingIn","isSigningUp","isLoggingOut","isVerifying","loginError","signupError","logoutError","sendPassResetSuccess","sendPassResetError","isFetching","fetchingError","isFetched","testSubmitError","isFetchingError","initializeTimer","isFetchError","combineReducers","action","verifyingError","fetchError","isfetched","allEnhancers","compose","applyMiddleware","thunk","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d029bfa1.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Row, Col, Typography } from \"antd\";\r\nimport \"./Login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  const history = useHistory();\r\n  const { Title } = Typography;\r\n  const { isLoading } = props;\r\n\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.isAuthenticated) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [props]);\r\n\r\n  const submitForm = (values) => {\r\n    props.sendLoginRequest(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  return (\r\n    <>\r\n      <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n        <Col xs={22} sm={22} md={6} lg={6} className=\"signin__container\">\r\n          <p className=\"sub-title\">🎓 EMS</p>\r\n\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={submitForm}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Email\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <div\r\n              className=\"link\"\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontWeight: 500,\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              <Link to=\"/signup\">New here? Create your account.</Link>\r\n            </div>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"sign__in\"\r\n                style={{ minWidth: \"44px\" }}\r\n                loading={isLoading}\r\n                htmlType=\"submit\"\r\n              >\r\n                {!isLoading ? \"Sign In\" : \"Logging In\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isLoading: state.auth.isLoading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendLoginRequest: (values) => dispatch(loginUser(values)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\n\r\nexport const SEND_PASS_RESET = \"SEND_PASS_RESET\";\r\nexport const SEND_PASS_RESET_ERROR = \"SEND_PASS_RESET_ERROR\";\r\nexport const SEND_PASS_RESET_SUCCESS = \"SEND_PASS_RESET_SUCCESS\";\r\n\r\nexport const USER_ACCOUNT_CREATED = \"USER_ACCOUNT_CREATED\";\r\n\r\nconst requestLogin = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveLogin = (user, profileID) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n    profileID,\r\n  };\r\n};\r\n\r\nconst loginError = () => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nconst requestsignup = () => {\r\n  return {\r\n    type: SIGN_UP_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveSignup = (user) => {\r\n  return {\r\n    type: SIGN_UP_SUCCESS,\r\n    user,\r\n  };\r\n};\r\n\r\nconst signupError = (errMess) => {\r\n  return {\r\n    type: SIGN_UP_FAILURE,\r\n    errMess,\r\n  };\r\n};\r\n\r\nconst requestLogout = () => {\r\n  return {\r\n    type: LOGOUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveLogout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\nconst logoutError = () => {\r\n  return {\r\n    type: LOGOUT_FAILURE,\r\n  };\r\n};\r\n\r\nconst verifyRequest = () => {\r\n  return {\r\n    type: VERIFY_REQUEST,\r\n  };\r\n};\r\n\r\nconst verifySuccess = () => {\r\n  return {\r\n    type: VERIFY_SUCCESS,\r\n  };\r\n};\r\n\r\nconst sendingPassReset = () => {\r\n  return {\r\n    type: SEND_PASS_RESET,\r\n  };\r\n};\r\n\r\nconst sendPassResetError = (errMess) => {\r\n  return {\r\n    type: SEND_PASS_RESET_ERROR,\r\n    errMess,\r\n  };\r\n};\r\n\r\nconst sendPassResetSuccess = () => {\r\n  return {\r\n    type: SEND_PASS_RESET_SUCCESS,\r\n  };\r\n};\r\n\r\nconst userAccountCreated = () => {\r\n  return {\r\n    type: USER_ACCOUNT_CREATED,\r\n  };\r\n};\r\n\r\nexport const loginUser = (values) => (dispatch) => {\r\n  dispatch(requestLogin());\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(values),\r\n  };\r\n\r\n  fetch(\"/user/login\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.token) {\r\n        localStorage.setItem(\"token\", `Bearer ${data.token}`);\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(data.payload.user));\r\n        localStorage.setItem(\"profileID\", data.payload.profileID);\r\n        dispatch(receiveLogin(data.payload.user, data.payload.profileID));\r\n        // history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      dispatch(loginError());\r\n    });\r\n};\r\n\r\nexport const signUpUser = (values) => (dispatch) => {\r\n  dispatch(requestsignup());\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(values),\r\n  };\r\n  //console.log(\"Success:\", values);\r\n  fetch(\"/user/signup\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.token) {\r\n        // localStorage.setItem(\"token\", `Bearer ${data.token}`);\r\n        // localStorage.setItem('userProfile', JSON.stringify(data.payload.user));\r\n        // localStorage.setItem('profileID', data.payload.profileID);\r\n        dispatch(receiveSignup(data.user));\r\n        //history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error)\r\n      dispatch(signupError());\r\n    });\r\n};\r\n\r\nexport const accountCreated = () => (dispatch) => {\r\n  dispatch(userAccountCreated());\r\n};\r\n\r\n// export const signupUser = (displayName, email, password, password2) => dispatch => {\r\n//   dispatch(requestsignup());\r\n//   //verifying password and name.\r\n//   if(displayName.length < 3){\r\n//     return dispatch(signupError(\"Name must have atleast 3 characters.\"));\r\n//   }\r\n\r\n//   if(displayName.length > 50){\r\n//     return dispatch(signupError(\"Name must have atmost 50 characters.\"));\r\n//   }\r\n\r\n//   if(!/^[a-zA-Z ]*$/.test(displayName)){\r\n//     return dispatch(signupError(\"Name must contain only alphabets.\"));\r\n//   }\r\n\r\n//   if(password !== password2){\r\n//     return dispatch(signupError(\"Passwords do not match\"));\r\n//   }\r\n\r\n// };\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch(requestLogout());\r\n  dispatch(receiveLogout());\r\n};\r\n\r\n// export const verifyAuth = () => dispatch => {\r\n//   dispatch(verifyRequest());\r\n//   myFirebase.auth().onAuthStateChanged(user => {\r\n//     if (user !== null) {\r\n//       dispatch(receiveLogin(user));\r\n//     }\r\n//     dispatch(verifySuccess());\r\n//   });\r\n// };\r\n\r\n// export const sendPasswordResetLink = (email) => dispatch => {\r\n//   dispatch(sendingPassReset());\r\n//   myFirebase.auth().sendPasswordResetEmail(email)\r\n//   .then(()=>{\r\n//     dispatch(sendPassResetSuccess());\r\n//   })\r\n//   .catch(error=>{\r\n//     console.error(error);\r\n//     switch(error.code){\r\n//       case 'auth/invalid-email':\r\n//         dispatch(sendPassResetError(\"Invalid email address.\"));\r\n//         break;\r\n//       case 'auth/user-not-found':\r\n//         dispatch(sendPassResetError(\"User not found with the given email address.\"));\r\n//         break;\r\n//       default:\r\n//         dispatch(sendPassResetError(\"Failed to send password reset email.\"));\r\n//     }\r\n//   })\r\n// }\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  notification,\r\n} from \"antd\";\r\nimport \"./Signup.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signUpUser, accountCreated } from \"../actions/authActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Signup(props) {\r\n  const [showSelect, setShowSelect] = useState(false);\r\n  const history = useHistory();\r\n  const { Option } = Select;\r\n  const { isLoading } = props;\r\n\r\n  const submitForm = (values) => {\r\n    props.sendSignUpRequest(values);\r\n    console.log(values);\r\n  };\r\n\r\n  const openNotification = () => {\r\n    const args = {\r\n      message: \"Account Created\",\r\n      description:\r\n        \"Congratulations, Now you are part of our family. Please login to continue.\",\r\n      duration: 3,\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  useEffect(() => {\r\n    if (props.accountCreated) {\r\n      openNotification();\r\n      props.sendUserAccountCreated();\r\n    }\r\n  }, [props]);\r\n\r\n  const handleSelect = (select, optionData) => {\r\n    console.log(optionData);\r\n    if (optionData.value === \"teacher\") {\r\n      setShowSelect(true);\r\n    } else {\r\n      setShowSelect(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n        <Col xs={22} sm={22} md={8} lg={8} className=\"signup__container\">\r\n          <p className=\"sub-title__signup\">🎓 EMS</p>\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{\r\n              remember: true,\r\n            }}\r\n            onFinish={submitForm}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <div className=\"element__wrapper\">\r\n              <Form.Item\r\n                name=\"firstName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your First Name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"First Name\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"lastName\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Last Name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Last Name\" />\r\n              </Form.Item>\r\n            </div>\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your email!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"abcd@gmail.com\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your password!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"Password\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"phone\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your Phone Number!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input type=\"tel\" placeholder=\"7275XXXXXX\" />\r\n            </Form.Item>\r\n\r\n            <div className=\"element__wrapper\">\r\n              <Form.Item\r\n                name=\"role\"\r\n                rules={[\r\n                  {\r\n                    message: \"Please input your role!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"Role\" onSelect={handleSelect}>\r\n                  <Option value=\"student\">Student</Option>\r\n                  <Option value=\"teacher\">Teacher</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"section\"\r\n                rules={[\r\n                  {\r\n                    message: \"Please input your section!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"Section\" disabled={showSelect}>\r\n                  <Option value=\"A\">A</Option>\r\n                  <Option value=\"B\">B</Option>\r\n                  <Option value=\"C\">C</Option>\r\n                  <Option value=\"D\">D</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"className\"\r\n                rules={[\r\n                  {\r\n                    message: \"Please input your email!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select defaultValue=\"Class\" disabled={showSelect}>\r\n                  <Option value=\"IX\">IX</Option>\r\n                  {/* <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option> */}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n            <div\r\n              className=\"link\"\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontWeight: 500,\r\n                marginBottom: \"15px\",\r\n              }}\r\n            >\r\n              <Link to=\"/sigin\">Already have account? Signin</Link>\r\n            </div>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"sign__up\"\r\n                htmlType=\"submit\"\r\n                loading={isLoading}\r\n              >\r\n                {!isLoading ? \"Sign Up\" : \"Creating Account\"}\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isLoading: state.auth.isLoading,\r\n    accountCreated: state.auth.accountCreated,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendSignUpRequest: (values) => dispatch(signUpUser(values)),\r\n    sendUserAccountCreated: () => dispatch(accountCreated()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProtectedRoute extends React.Component {\r\n  render() {\r\n    const Component = this.props.component;\r\n    return this.props.isAuthenticated ? (\r\n      <Component userInfo={this.props.userInfo} />\r\n    ) : (\r\n      <Redirect to={{ pathname: \"/signin\" }} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    userInfo: state.auth.user,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(ProtectedRoute);\r\n","import { logoutUser } from \"./authActions\";\r\nexport const FETCH_TEST_REQUEST = \"FETCH_TEST_REQUEST\";\r\nexport const FETCH_TEST_SUCCESS = \"FETCH_TEST_SUCCESS\";\r\nexport const FETCH_ATTEMPT_TEST_SUCCESS = \"FETCH_ATTEMPT_TEST_SUCCESS\";\r\nexport const FETCH_TEST_FAILURE = \"FETCH_TEST_FAILURE\";\r\nexport const SUBMIT_TEST_FAILURE = \"SUBMIT_TEST_FAILURE\";\r\nexport const SUBMIT_TEST_SUCCESS = \"SUBMIT_TEST_SUCCESS\";\r\n\r\n// Teacher action types\r\nexport const FETCH_TEACHER_TEST_REQUEST = \"FETCH_TEACHER_TEST_REQUEST\";\r\nexport const FETCH_TEACHER_TEST_SUCCESS = \"FETCH_TEACHER_TEST_SUCCESS\";\r\nexport const FETCH_TEACHER_TEST_FAILURE = \"FETCH_TEACHER_TEST_FAILURE\";\r\n\r\nconst requestTests = () => {\r\n  return {\r\n    type: FETCH_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveTests = (tests) => {\r\n  return {\r\n    type: FETCH_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nconst testsError = (errorData) => {\r\n  return {\r\n    type: FETCH_TEST_FAILURE,\r\n  };\r\n};\r\nconst requestTeacherTests = () => {\r\n  return {\r\n    type: FETCH_TEACHER_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveTeacherTests = (tests) => {\r\n  return {\r\n    type: FETCH_TEACHER_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nconst testsTeacherError = () => {\r\n  return {\r\n    type: FETCH_TEACHER_TEST_FAILURE,\r\n  };\r\n};\r\nconst testSubmitError = () => {\r\n  return {\r\n    type: SUBMIT_TEST_FAILURE,\r\n  };\r\n};\r\nconst testSubmitted = (testID) => {\r\n  return {\r\n    type: SUBMIT_TEST_SUCCESS,\r\n    testID: testID,\r\n  };\r\n};\r\n\r\nconst receiveAttemptTests = (tests) => {\r\n  return {\r\n    type: FETCH_ATTEMPT_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nexport const fetchAttemptTests = (profileID) => async (dispatch) => {\r\n  dispatch(requestTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/student/attempt-tests/${profileID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          dispatch(receiveAttemptTests(data.obj));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(testsError());\r\n    });\r\n};\r\n\r\nexport const fetchTests = (className) => async (dispatch) => {\r\n  dispatch(requestTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/student/tests/${className}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data?.error?.name === \"TokenExpiredError\") {\r\n        dispatch(logoutUser());\r\n      } else {\r\n        dispatch(receiveTests(data.obj));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport const submitTest = (data) => async (dispatch) => {\r\n  // dispatch(requestTests());\r\n  const {\r\n    testID,\r\n    correct,\r\n    unanswered,\r\n    totalMarks,\r\n    profileID,\r\n    testName,\r\n    firstName,\r\n    lastName,\r\n    wrong,\r\n  } = data;\r\n  const testData = JSON.parse(localStorage.getItem(testID));\r\n  let submitMinutes = testData.rM;\r\n  const submitBy = [\r\n    {\r\n      correct,\r\n      unanswered,\r\n      totalMarks,\r\n      profileID,\r\n      testName,\r\n      firstName,\r\n      lastName,\r\n      wrong,\r\n      submitMinutes,\r\n    },\r\n  ];\r\n\r\n  const postedData = {\r\n    submitBy,\r\n    testID,\r\n    testName,\r\n  };\r\n\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n    body: JSON.stringify(postedData),\r\n  };\r\n\r\n  await fetch(`/student/submit-test/${testID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          dispatch(testSubmitted(testID));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(testSubmitError());\r\n    });\r\n};\r\n\r\n/* Teacher Actions*/\r\n\r\nexport const fetchTeacherTests = (profileID) => async (dispatch) => {\r\n  dispatch(requestTeacherTests());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/teacher/tests/${profileID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          dispatch(receiveTeacherTests(data.obj));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(testsTeacherError());\r\n    });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./TestCard.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchTests } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction TestCard(props) {\r\n  let { tests, isLoading, studentClassName, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(studentClassName);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header red__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Today's Test\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/attempt-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box red__index\">{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"test__name \"> {test.testName}</div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestCard);\r\n","import React, { useEffect } from \"react\";\r\nimport \"./TestCard.css\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchAttemptTests } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction ResultCard(props) {\r\n  let { tests, isLoading, profileID, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n    console.log(\"fired\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Recently Attempted Tests\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/result\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p\r\n                      className=\"index__box \"\r\n                      style={{ backgroundColor: \"#1e90ff\" }}\r\n                    >\r\n                      {index + 1}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"test__name\"> {test.testName}</div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingAttemptedTest,\r\n    tests: state.tests.attemptedTest,\r\n    profileID: state.auth.profileID,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCard);\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport TestCard from \"./TestCard\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard(props) {\r\n  const { studentClassName, profileID, userInfo } = props;\r\n  const trimLength = 8;\r\n\r\n  // console.log(userInfo);\r\n\r\n  return (\r\n    <>\r\n      <div className={\"container dashboard\"}>\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <TestCard\r\n              studentClassName={studentClassName}\r\n              trimLength={trimLength}\r\n            />\r\n          </Col>\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <ResultCard trimLength={trimLength} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    studentClassName: state.auth.user ? state.auth.user.className : null,\r\n    profileID: state.auth.user ? state.auth.user.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Dashboard);\r\n","import React, { useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchClasses } from \"../../actions/classesActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction Classes(props) {\r\n  let { classesList, isLoading, studentClassName, trimLength, classes } = props;\r\n  if (classesList)\r\n    classesList =\r\n      classesList.length > trimLength\r\n        ? classesList.slice(-trimLength).reverse()\r\n        : classesList;\r\n\r\n  useEffect(() => {\r\n    props.fetchClasses();\r\n  }, []);\r\n  console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header red__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Recent Registered Classes\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && classesList ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {classesList.map((individualClass, index) => (\r\n              <Link to=\"/attempt-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box red__index\">{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"test__name \">\r\n                    {\" \"}\r\n                    Class - {individualClass.className}\r\n                  </div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n    classesList: state.classesData.classes,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchClasses: () => dispatch(fetchClasses()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Classes);\r\n","import { logoutUser } from \"./authActions\";\r\nexport const FETCH_CLASSES_REQUEST = \"FETCH_CLASSES_REQUEST\";\r\nexport const FETCH_CLASSES_SUCCESS = \"FETCH_CLASSES_SUCCESS\";\r\nexport const FETCH_CLASSES_FAILURE = \"FETCH_CLASSES_FAILURE\";\r\n\r\nconst requestClasses = () => {\r\n  return {\r\n    type: FETCH_CLASSES_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveClasses = (data) => {\r\n  return {\r\n    type: FETCH_CLASSES_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nconst ClassesError = () => {\r\n  return {\r\n    type: FETCH_CLASSES_FAILURE,\r\n  };\r\n};\r\n\r\nexport const fetchClasses = (values) => (dispatch) => {\r\n  dispatch(requestClasses());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n  fetch(\"/teacher/classes\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data?.error?.name === \"TokenExpiredError\") {\r\n        dispatch(logoutUser());\r\n      } else {\r\n        const filteredDupicates = data.obj.filter(\r\n          (v, i, a) => a.findIndex((t) => t.className === v.className) === i\r\n        );\r\n        dispatch(receiveClasses(filteredDupicates));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      //Do something with the error if you want!\r\n      dispatch(ClassesError());\r\n    });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchTeacherTests } from \"../../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\nimport \"./index.css\";\r\n\r\nfunction AssignedTests(props) {\r\n  let { tests, isLoading, profileID, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n    console.log(\"fired\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__teacher__header\">\r\n        <p className=\"left__teacher__header__text\">\r\n          {<HiOutlineClipboardList />}Recently Assigned Tests\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/assigned-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box index__box__teacher \">\r\n                      {index + 1}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"test__name\">\r\n                    {\" \"}\r\n                    {test.testName} - Class {test.className}\r\n                  </div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n    profileID: state.auth.profileID,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchTeacherTests(profileID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignedTests);\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport Classes from \"./Classes\";\r\nimport AssignedTests from \"./AssignedTests\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard(props) {\r\n  const trimLength = 8;\r\n  // console.log(userInfo);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <AssignedTests trimLength={trimLength} />\r\n          </Col>\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\r\n            <Classes trimLength={trimLength} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { AudioOutlined } from '@ant-design/icons';\r\nconst { Search } = Input;\r\n\r\nexport default function SearchBox(props) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.handleListData(searchTerm.toLowerCase());\r\n  }, [searchTerm]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const onSearch = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__input\">\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onSearch={onSearch}\r\n          onChange={handleSearchChange}\r\n          enterButton\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\"/test-instructions\");\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n\r\n    //console.log();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">Available Test</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests && tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">Start: Oct 26 2020 12:14PM</p>\r\n                        <p className=\"time end\">End: Oct 29 2020 11:50PM</p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">Start: Oct 26 2020 12:14PM</p>\r\n                        <p className=\"time end\">End: Oct 29 2020 11:50PM</p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchTests, fetchAttemptTests } from \"../actions/testActions\";\r\nimport { selectedTest } from \"../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, studentClassName, profileID } = props;\r\n\r\n  const handleSelectedTest =(testData)=>{\r\n      props.selectedTest(testData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(studentClassName);\r\n    props.fetchAttemptTests(profileID);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n       <TestList tests={tests} handleSelectedTest={handleSelectedTest} /> \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.tests.test,\r\n    profileID: state.auth.profileID,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\r\n    fetchAttemptTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n    selectedTest: (testData) =>dispatch(selectedTest(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\r\n","import { logoutUser } from \"./authActions\";\r\nexport const TEST_SELECTED = \"TEST_SELECTED\";\r\nexport const SELECTED_TEST_RESULT = \"SELECTED_TEST_RESULT\";\r\nexport const SELECTED_ASSIGNED_TEST = \"SELECTED_ASSIGNED_TEST\";\r\n\r\nconst selectTest = (testData) => {\r\n  return {\r\n    type: TEST_SELECTED,\r\n    testData,\r\n  };\r\n};\r\n\r\nconst selectTestResult = (testData) => {\r\n  return {\r\n    type: SELECTED_TEST_RESULT,\r\n    testData,\r\n  };\r\n};\r\nconst selectAssignedTest = (testData) => {\r\n  return {\r\n    type: SELECTED_ASSIGNED_TEST,\r\n    testData,\r\n  };\r\n};\r\n\r\nexport const selectedTest = (data) => (dispatch) => {\r\n  dispatch(selectTest(data));\r\n};\r\n\r\nexport const selectedTestResult = (data) => (dispatch) => {\r\n  dispatch(selectTestResult(data));\r\n};\r\nexport const selectedAssignedTest = (data) => (dispatch) => {\r\n  dispatch(selectAssignedTest(data));\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction AttemptTest(props) {\r\n  const { studentClassName } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest studentClassName={studentClassName} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    studentClassName: state.auth.user ? state.auth.user.className : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AttemptTest);\r\n","export const Roles ={\r\n    teacher: \"teacher\",\r\n    student: \"student\"\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Roles } from \"../Roles/roles\";\r\nimport { useLocation } from 'react-router-dom'\r\n// const SubMenu = Menu.SubMenu;\r\n// const MenuItemGroup = Menu.ItemGroup;\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst LeftMenu = (props) => {\r\n  const [isAuthenticated, setisAuthenticated] = useState(false);\r\n  const location = useLocation();\r\n\r\n  \r\n  // const role = props.role;\r\n  const role = props.userInfo.role;\r\n  //console.log(props)\r\n\r\n  useEffect(() => {\r\n    setisAuthenticated(props.isAuthenticated);\r\n  }, [props]);\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userProfile\");\r\n    localStorage.removeItem(\"profileID\");\r\n    props.signOut();\r\n  };\r\n\r\n  const handleProfile = () => {};\r\n\r\n  const { md } = useBreakpoint();\r\n  const homeRoute = isAuthenticated ? \"/\" : \"signin\";\r\n  const testRoute = isAuthenticated ? \"/attempt-test\" : \"signup\";\r\n  const resultRoute = isAuthenticated ? \"/result\" : \"\";\r\n  const signOutRoute = isAuthenticated ? \"/signin\" : \"\";\r\n  const profileRoute = isAuthenticated ? \"/profile\" : \"\";\r\n  const createTestRoute = isAuthenticated ? \"/create-test\" : \"\";\r\n  const assignedTestRoute = isAuthenticated ? \"/assigned-test\" : \"\";\r\n  //console.log(role)\r\n  const style ={\r\n    display: (location.pathname===\"/start-test\")?(\"none\"):(\"block\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\" style={style}>\r\n      <Menu mode={md ? \"horizontal\" : \"inline\"}>\r\n        <Menu.Item key=\"01\">\r\n          <NavLink to={homeRoute}>\r\n            {isAuthenticated ? \"Home\" : \"Sign In\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"02\">\r\n          <NavLink to={Roles.teacher === role ? createTestRoute : testRoute}>\r\n            {isAuthenticated\r\n              ? Roles.teacher === role\r\n                ? \"Create Test\"\r\n                : \"Attempt Test\"\r\n              : \"SignUp\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"03\" className={!isAuthenticated ? \"display-none\" : \"\"}>\r\n          <NavLink\r\n            to={Roles.teacher === role ? assignedTestRoute : resultRoute}\r\n          >\r\n            {isAuthenticated\r\n              ? Roles.teacher === role\r\n                ? \"Assigned Test\"\r\n                : \"Result\"\r\n              : \"\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"05\" className={!isAuthenticated ? \"display-none\" : \"\"}>\r\n          <NavLink to={profileRoute} onClick={handleProfile}>\r\n            {isAuthenticated ? \"Profile\" : \"\"}\r\n          </NavLink>\r\n        </Menu.Item>\r\n      </Menu>\r\n      <div className=\"right-side\">\r\n        <NavLink\r\n          to={signOutRoute}\r\n          onClick={signOut}\r\n          className={!isAuthenticated ? \"display-none signout\" : \"signout\"}\r\n        >\r\n          {isAuthenticated ? \"Sign Out\" : \"\"}\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    userInfo: state.auth.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftMenu);\r\n","import React, { Component } from \"react\";\r\nimport LeftMenu from \"./LeftMenu\";\r\nimport { Drawer, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Navbar.css\";\r\n\r\n\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    current: \"mail\",\r\n    visible: false,\r\n  };\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.userInfo);\r\n\r\n    return (\r\n      <nav className=\"menuBar\">\r\n        <div className=\"logo\">\r\n          <Link >🎓 EMS</Link>\r\n        </div>\r\n        <div className=\"menuCon\">\r\n          <div className=\"leftMenu\">\r\n            <LeftMenu />\r\n          </div>\r\n          <Button className=\"barsMenu\" type=\"primary\" onClick={this.showDrawer}>\r\n            <span className=\"barsBtn\"></span>\r\n          </Button>\r\n          <Drawer\r\n            title=\"Menu\"\r\n            placement=\"right\"\r\n            closable={false}\r\n            onClose={this.onClose}\r\n            visible={this.state.visible}\r\n          >\r\n            <LeftMenu role={this.props} />\r\n          </Drawer>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userInfo: state.auth.user,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(Navbar);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nconst { Search } = Input;\r\nexport default function SearchBox(props) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.handleListData(searchTerm.toLowerCase());\r\n  }, [searchTerm]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const onSearch = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__input\">\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onSearch={onSearch}\r\n          onChange={handleSearchChange}\r\n          enterButton\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\r\n      `/result/${selectedData.testName?.replace(/\\s+/g, \"-\").toLowerCase()}`\r\n    );\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n    //console.log();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">Attempted Test</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchAttemptTests } from \"../actions/testActions\";\r\nimport { selectedTestResult } from \"../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, profileID } = props;\r\n\r\n  const handleSelectedTest = (testData) => {\r\n    props.selectedTest(testData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n        <TestList tests={tests} handleSelectedTest={handleSelectedTest} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.tests.attemptedTest,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n    selectedTest: (testData) => dispatch(selectedTestResult(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction ResultWrapper(props) {\r\n  const { profileID } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest profileID={profileID} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ResultWrapper);\r\n","import React, {useState} from \"react\";\r\nimport { Row, Modal, Col, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./TestInstruction.css\";\r\nimport { FaArrowCircleRight } from \"react-icons/fa\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction TestInstruction(props) {\r\n  //console.log(props.selectedTest);\r\n  const history = useHistory();\r\n  const { confirm } = Modal;\r\n  const { tests} = props;\r\n  const {\r\n    outOfMarks,\r\n    questions,\r\n    minutes,\r\n    category,\r\n    className,\r\n    testName,\r\n    rules,\r\n    _id: testID,\r\n  } = props.selectedTest;\r\n\r\n  let testRules, attempted=false;\r\n\r\n  if (rules) {\r\n    testRules = rules;\r\n  }\r\n  \r\n\r\n  tests.map((test, index)=>{\r\n    if(test.testName === testName){\r\n      attempted=true\r\n    }\r\n  })\r\n\r\n  const handleButtonClick = () => {\r\n    confirm({\r\n      title: \"Do you give test now?\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Once you click OK , timer will start!\",\r\n      onOk() {\r\n        // console.log(props.selectedTest);\r\n        console.log(\"OK\");\r\n        history.push(\"/start-test\");\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={22} xl={22}>\r\n            <div className=\"instructions__wrapper\">\r\n              <Row justify=\"center\">\r\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} xl={12}>\r\n                  <div className=\"instructions__wrapper__left\">\r\n                    <p className=\"instructions__heading\">Test Instructions</p>\r\n                    <div className=\"test__info\">\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Test Name:</div>\r\n                        <div className=\"test__fields__Value\">{testName}</div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Total Questions:</div>\r\n                        <div className=\"test__fields__Value\">\r\n                          {questions?.length}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Allocated Time:</div>\r\n                        <div className=\"test__fields__Value\">\r\n                          {minutes} Minutes\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Category:</div>\r\n                        <div className=\"test__fields__Value\">{category}</div>\r\n                      </div>\r\n\r\n                      <div className=\"test__subheadings\">\r\n                        <div className=\"test__fields\">Total Marks:</div>\r\n                        <div className=\"test__fields__Value\">{outOfMarks}</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"test__instructions\">\r\n                      <p className=\"test__instructions__subheading\">\r\n                        Instructions\r\n                      </p>\r\n                      <div className=\"instructions\">\r\n                        {testRules?.map((rule, index) => (\r\n                          <p className=\"rule\" key={index}>\r\n                            <FaArrowCircleRight />{\" \"}\r\n                            <span className=\"rule__description\">\r\n                              {rule.value}\r\n                            </span>\r\n                          </p>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} xl={12}>\r\n                  <div className=\"instructions__wrapper__right\">\r\n                    <div className=\"ems__log__wrapper\">\r\n                      <img\r\n                        src=\"/ems-logo.png\"\r\n                        className=\"ems__logo\"\r\n                        alt=\"ems-logo\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"navigation__instructions__heading\">\r\n                      Navigation Buttons\r\n                    </p>\r\n                    <div className=\"navigation__instructions\">\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#449d44\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Next\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Next: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#449d44\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Previous\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Next: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#ec971f\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          Flag\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          Flag: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"navigation__buttons__Feature\">\r\n                        <Button\r\n                          style={{ backgroundColor: \"#ff4d4f\" }}\r\n                          className=\"btn-instructions\"\r\n                        >\r\n                          End Test\r\n                        </Button>\r\n                        <p className=\"button__description\">\r\n                          End Test: By clicking Next button next question will\r\n                          appear to user\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"select__button\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        onClick={handleButtonClick}\r\n                        disabled={attempted}\r\n                      >\r\n                        Continue\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n     tests: state.tests.attemptedTest,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestInstruction);\r\n","import React from \"react\";\r\nimport { Row, Col, Divider, Progress } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ShowResult.css\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nfunction ShowResult(props) {\r\n  const { testName, date } = props.selectedTest;\r\n  const testInfo = props.selectedTest[0];\r\n  let marks,\r\n    name,\r\n    rightAnswers,\r\n    submitMinutes,\r\n    totalMarks,\r\n    wrongAnswers,\r\n    totalAttempt;\r\n\r\n  if (testInfo) {\r\n    marks = testInfo.correct;\r\n    // name = testInfo.name;\r\n    rightAnswers = testInfo.correct;\r\n    submitMinutes = testInfo.submitMinutes;\r\n    totalMarks = testInfo.totalMarks;\r\n    wrongAnswers = testInfo.wrong;\r\n    totalAttempt = rightAnswers - -wrongAnswers;\r\n  }\r\n  const submitDate = new Date(date);\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <div className=\"result__wrapper\">\r\n              <div className=\"result__wrapper__header\">\r\n                {/* <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Name: </div>\r\n                  <div className=\"result__test__name__field\">{name}</div>\r\n                </div> */}\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Test Name: </div>\r\n                  <div className=\"result__test__name__field\">{testName}</div>\r\n                </div>\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">Time Taken: </div>\r\n                  <div className=\"result__test__name__field\">\r\n                    {submitMinutes ? submitMinutes : \"XX\"} minutes\r\n                  </div>\r\n                </div>\r\n                <div className=\"result__heading\">\r\n                  <div className=\"result__test__name\">\r\n                    Test Submitted Date:{\" \"}\r\n                  </div>\r\n                  <div className=\"result__test__name__field\">\r\n                    {submitDate.toLocaleDateString(\"en-US\")}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Divider />\r\n              <div className=\"result__wrapper__body\">\r\n                <div className=\"percentage\">\r\n                  <div className=\"percentage__heading\">Your Score</div>\r\n                  <Progress\r\n                    percent={Math.floor((marks / totalMarks) * 100)}\r\n                    status=\"active\"\r\n                  />\r\n                </div>\r\n                <div className=\"marks__info\">\r\n                  <div className=\"marks__chart\">\r\n                    <Chart\r\n                      width={\"100%\"}\r\n                      height={\"100%\"}\r\n                      chartType=\"PieChart\"\r\n                      loader={<div>Loading Chart</div>}\r\n                      data={[\r\n                        [\"Task\", \"Hours per Day\"],\r\n                        [\"Correct\", marks / 10],\r\n                        [\"Wrong\", totalMarks / 10 - marks / 10],\r\n                      ]}\r\n                      options={{\r\n                        title: \"Marks Distribution\",\r\n                        // Just add this option\r\n                        pieHole: 0.45,\r\n                      }}\r\n                      rootProps={{ \"data-testid\": \"3\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"marks\">\r\n                    <h2 className=\"inlarge\">Marks</h2>\r\n                    <div className=\"marksBox\">\r\n                      <div className=\"obtained__marks\">\r\n                        {marks} | {totalMarks}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"attempted\">\r\n                  <div className=\"total__attempted\">\r\n                    <div className=\"percentage\">\r\n                      <div className=\"percentage__heading\">\r\n                        Attempted: {totalAttempt}{\" \"}\r\n                      </div>\r\n                      <Progress\r\n                        percent={Math.floor((totalAttempt / totalMarks) * 100)}\r\n                        status=\"active\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"correct__attempted\">\r\n                    <div className=\"percentage\">\r\n                      <div className=\"percentage__heading\">\r\n                        Correct Answers: {rightAnswers}\r\n                      </div>\r\n                      <Progress\r\n                        percent={Math.floor((rightAnswers / totalMarks) * 100)}\r\n                        status=\"active\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestResultData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ShowResult);\r\n","import { logoutUser } from \"./authActions\";\r\nexport const UPDATE_ATTEMPT_TEST_REQUEST = \"UPDATE_ATTEMPT_TEST_REQUEST\";\r\nexport const UPDATE_ATTEMPT_TEST_SUCCESS = \"UPDATE_ATTEMPT_TEST_SUCCESS\";\r\nexport const UPDATE_ATTEMPT_TEST_FAILURE = \"UPDATE_ATTEMPT_TEST_FAILURE\";\r\n\r\nconst requestUpdateTimeSpent = () => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveUpdateTimeSpent = (time) => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_SUCCESS,\r\n    time,\r\n  };\r\n};\r\n\r\nconst updateTimeSpentError = () => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nexport const updateTimeSpentByStudent = (values) => (dispatch) => {\r\n  dispatch(requestUpdateTimeSpent());\r\n  let {\r\n    profileID,\r\n    testName,\r\n    completed,\r\n    minutes: totalTime,\r\n    _id: testID,\r\n    updatingAttemptedMinutes,\r\n  } = values;\r\n\r\n  updatingAttemptedMinutes =\r\n    updatingAttemptedMinutes !== 0 ? updatingAttemptedMinutes : 0;\r\n  console.log(parseInt(updatingAttemptedMinutes));\r\n  let subtractTime =\r\n    updatingAttemptedMinutes == 0 ? parseInt(totalTime) : parseInt(0);\r\n\r\n  let attemptedTime = Math.abs(\r\n    subtractTime - parseInt(updatingAttemptedMinutes - 1)\r\n  );\r\n\r\n  const data = { profileID, testName, completed, attemptedTime, totalTime };\r\n  console.log(completed, totalTime, data.attemptedTime);\r\n\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  fetch(`/student/update-test-status/${testID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          data.obj.testStatus.map((test, index) => {\r\n            if (test.testID === testID) {\r\n              localStorage.setItem(testID, test.attemptedTime);\r\n            }\r\n          });\r\n\r\n          console.log(data.obj);\r\n          dispatch(receiveUpdateTimeSpent(localStorage.getItem(testID)));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(updateTimeSpentError());\r\n    });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CountdownTimer from \"react-component-countdown-timer\";\r\n\r\nexport default function Counter(props) {\r\n  const { testID, totalMinutes } = props;\r\n  let time;\r\n  if (JSON.parse(localStorage.getItem(`${testID}`)) == null) {\r\n    time = parseInt(totalMinutes) * 60;\r\n  } else {\r\n    const testData = JSON.parse(localStorage.getItem(`${testID}`));\r\n    let remainingTime = testData.rM;\r\n    time = parseInt(remainingTime * 60);\r\n  }\r\n  const handleCounterEnd =()=>{\r\n    props.handleCounter();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CountdownTimer count={time} hideDay={true} onEnd={handleCounterEnd} />\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class LeftSide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.accordionContent = [];\r\n    this.state = {\r\n      questionsData: [],\r\n      selectRef: undefined,\r\n      activateQue: 0,\r\n      leftActiveQue: 0,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      questionsData: props.questionsData,\r\n      activateQue: props.activateQue,\r\n      footerClick: props.footerClick,\r\n    };\r\n  }\r\n\r\n  changeBg = (activatedQue, answered, footerClicked) => {\r\n    if (this.state.selectRef) {\r\n      this.state.selectRef.classList.remove(\"selected\");\r\n      if (answered == false) {\r\n        this.state.selectRef.classList.remove(\"answered\");\r\n      }\r\n    }\r\n    if (this.accordionContent[activatedQue])\r\n      this.accordionContent[activatedQue].classList.add(\"selected\");\r\n    if (answered && footerClicked == false) {\r\n      this.accordionContent[activatedQue].classList.add(\"answered\");\r\n    }\r\n    this.setState({\r\n      selectRef: this.accordionContent[activatedQue],\r\n    });\r\n  };\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextProps === this.props &&\r\n      nextProps.activateQue == this.props.activateQue\r\n    ) {\r\n      return false;\r\n    } else if (nextProps.selectRef !== this.props.selectRef) {\r\n      return false;\r\n    } else if (nextProps.flag !== this.props.flag) {\r\n      return false;\r\n    } else {\r\n      this.changeBg(\r\n        nextProps.activateQue,\r\n        nextProps.answered,\r\n        nextProps.footerClick\r\n      );\r\n\r\n      return true;\r\n    }\r\n  }\r\n  flagQuestion = () => {\r\n    this.state.selectRef.classList.add(\"flagged\");\r\n  };\r\n  componentDidMount() {\r\n    this.props.flagClicked(this.flagQuestion);\r\n  }\r\n\r\n  setFlag = () => {\r\n    this.state.selectRef.classList.add(\"add-flag\");\r\n  };\r\n\r\n  render() {\r\n    const handleClick = (e, index) => {\r\n      if (this.state.selectRef) {\r\n        this.state.selectRef.classList.remove(\"selected\");\r\n      }\r\n\r\n      this.setState({\r\n        selectRef: this.accordionContent[index],\r\n        leftActiveQue: index,\r\n      });\r\n      this.accordionContent[index].classList.add(\"selected\");\r\n\r\n      this.props.handleQuestionClick(index);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"questions__wrapper\">\r\n          {this.state.questionsData &&\r\n            this.state.questionsData.map((question, index) => (\r\n              <div\r\n                className={`question`}\r\n                ref={(ref) => (this.accordionContent[index] = ref)}\r\n                onClick={(e) => handleClick(e, index)}\r\n                key={index}\r\n              >\r\n                {index - -1}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Radio, Input } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { submitTest } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\n\r\nclass RightSide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activateQue: 0,\r\n      questionsData: [],\r\n      changeIndex: 0,\r\n      questionIndex: 0,\r\n      selectedAnswers: Array.apply(undefined, Array(5)),\r\n      value: null,\r\n      testID: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      questionsData: props.questionsData,\r\n      questionIndex: props.questionIndex,\r\n      testID: props.testID,\r\n    };\r\n  }\r\n\r\n  handleClearResponse = (index) => {\r\n    let newSelectedAnswers = this.state.selectedAnswers;\r\n    console.log(newSelectedAnswers[index]);\r\n    let blankClearAttempt =\r\n      newSelectedAnswers[index] === undefined ? true : false;\r\n\r\n    newSelectedAnswers[index] = undefined;\r\n    this.setState({\r\n      selectedAnswers: newSelectedAnswers,\r\n    });\r\n    this.props.handleClearResponse(index, blankClearAttempt);\r\n  };\r\n  onChange = (e, index) => {\r\n    let newSelectedAnswers = this.state.selectedAnswers;\r\n    if (newSelectedAnswers[index] === undefined) {\r\n      this.props.questionAnswered(index, e.target.value, false);\r\n    } else {\r\n      this.props.questionAnswered(index, e.target.value, true);\r\n    }\r\n    newSelectedAnswers[index] = e.target.value;\r\n    this.setState({\r\n      value: e.target.value,\r\n      selectedAnswers: newSelectedAnswers,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  changeActivatedQueInChild = (changeActivatedQue) => {\r\n    if (changeActivatedQue === \"next__question\") {\r\n      console.log(\"insdie if\");\r\n      console.log(this.state.questionsData.length, this.state.activateQue);\r\n      if (this.state.activateQue < this.state.questionsData.length - 1) {\r\n        this.setState({\r\n          activateQue: this.state.activateQue + 1,\r\n        });\r\n        this.props.changeParentActivatedQue(this.state.activateQue + 1);\r\n      }\r\n    } else if (changeActivatedQue === \"previous__question\") {\r\n      if (this.state.activateQue > 0) {\r\n        this.setState({\r\n          activateQue: this.state.activateQue - 1,\r\n        });\r\n        this.props.changeParentActivatedQue(this.state.activateQue - 1);\r\n      }\r\n    } else if (changeActivatedQue === \"flag__question\") {\r\n    } else if (changeActivatedQue === \"end__test\") {\r\n    } else {\r\n      this.setState({\r\n        activateQue: changeActivatedQue,\r\n      });\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n  submitTest = () => {\r\n    const {\r\n      userAnswers,\r\n      answers,\r\n      testName,\r\n      testID,\r\n      profileID,\r\n      firstName,\r\n      lastName,\r\n    } = this.props;\r\n    let correct = 0,\r\n      wrong = 0,\r\n      unanswered = 0,\r\n      totalMarks = answers.length,\r\n      dataToSubmit;\r\n\r\n    userAnswers.map((element, index) => {\r\n      if (element === undefined) {\r\n        unanswered = unanswered + 1;\r\n      } else if (element !== answers[index]) {\r\n        wrong = wrong + 1;\r\n      } else {\r\n        correct = correct + 1;\r\n      }\r\n      dataToSubmit = {\r\n        testID,\r\n        correct,\r\n        unanswered,\r\n        totalMarks,\r\n        profileID,\r\n        testName,\r\n        firstName,\r\n        lastName,\r\n        wrong,\r\n      };\r\n    });\r\n    this.props.submitTest(dataToSubmit);\r\n    this.props.signOut();\r\n    return;\r\n  };\r\n  render() {\r\n    const radioStyle = {\r\n      display: \"block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"descripiton__wrapper\">\r\n          <div className=\"question__no\">\r\n            Question {this.state.activateQue + 1} out of {this.state.questionsData.length}\r\n          </div>\r\n          {this.state.questionsData &&\r\n            this.state.questionsData.map((question, index) => {\r\n              if (this.state.activateQue === index) {\r\n                return (\r\n                  <div className=\"description__box\" key={index}>\r\n                    <div className=\"descripiton\"> {question.description}</div>\r\n                    <div className=\"options\">\r\n                      <Radio.Group\r\n                        onChange={(e) => this.onChange(e, index)}\r\n                        value={this.state.selectedAnswers[index]}\r\n                      >\r\n                        <Radio style={radioStyle} value={1}>\r\n                          {question.options[0].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={2}>\r\n                          {question.options[1].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={3}>\r\n                          {question.options[2].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={4}>\r\n                          {question.options[3].option}\r\n                        </Radio>\r\n                      </Radio.Group>\r\n                      <div\r\n                        className=\"clear__response\"\r\n                        onClick={() => this.handleClearResponse(index)}\r\n                      >\r\n                        {<CloseOutlined />} Clear Response\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n    firstName: state.auth.user.firstName,\r\n    lastName: state.auth.user.lastName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitTest: (data) => dispatch(submitTest(data)),\r\n    signOut: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSide);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Footer extends Component {\r\n  handleNext = (e) => {\r\n    //this.props.handleNextButton()\r\n    // console.log(e.currentTarget.classList[0])\r\n    this.props.handleFooterButtons(e.currentTarget.classList[0]);\r\n  };\r\n  submitTest = () => {\r\n    this.props.handleSubmitTest();\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"footer__wrapper\">\r\n          <div className=\"left__footer\">\r\n            <div\r\n              className=\"previous__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Previous\r\n            </div>\r\n            <div\r\n              className=\"flag__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Flag\r\n            </div>\r\n            <div\r\n              className=\"next__question box\"\r\n              onClick={(e) => this.handleNext(e)}\r\n            >\r\n              Next\r\n            </div>\r\n          </div>\r\n          <div className=\"right__footer\">\r\n            <div className=\"end__test box\" onClick={this.submitTest}>\r\n              End Test\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\r\nimport \"./HandleLiveTest.css\";\r\nimport LeftSide from \"./LeftSide\";\r\nimport RightSide from \"./RightSide\";\r\nimport Footer from \"./Footer\";\r\nimport { questions } from \"./mockData\";\r\nimport Counter from \"./Counter\";\r\n\r\nclass HandleLiveTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      testID: undefined,\r\n      totalMinutes: undefined,\r\n      questionsData: [],\r\n      answers: [],\r\n      totalScore: 0,\r\n      footerClick: false,\r\n      activateQue: 0,\r\n      totalAnswered: 0,\r\n      answered: false,\r\n      totalPending: null,\r\n      totalFlagged: 0,\r\n      questionIndex: 0,\r\n      flag: 0,\r\n      testName: null,\r\n      userAnswers: Array.apply(undefined, Array(5)),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //  const answers = question\r\n    // make a call using redux\r\n    this.props.counterEnd(this.submitTestOnCounterEnd);\r\n\r\n    this.setState({\r\n      questionsData: this.props.selectedTest.questions,\r\n      // questionsData:questions,\r\n      answers: this.props.selectedTest.answers,\r\n      testID: this.props.testID,\r\n      testName: this.props.selectedTest.testName,\r\n      totalPending: this.props.selectedTest.questions.length,\r\n    });\r\n    // fire function given by redux\r\n  }\r\n\r\n  changeActivatedQueFromFooter = (changeActivatedQue) => {\r\n    if (changeActivatedQue !== \"flag__question\") {\r\n      this.setState({\r\n        footerClick: true,\r\n      });\r\n      this.child.changeActivatedQueInChild(changeActivatedQue);\r\n    } else {\r\n      this.triggerFlag();\r\n      if (this.state.flag <= this.state.questionsData.length) {\r\n        this.setState({\r\n          flag: this.state.flag + 1,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  handleSubmitTest = () => {\r\n    this.child.submitTest();\r\n  };\r\n  changeParentActivatedQue = (index) => {\r\n    this.setState({\r\n      activateQue: index,\r\n      footerClick: true,\r\n    });\r\n  };\r\n  submitTestOnCounterEnd = () => {\r\n    this.handleSubmitTest();\r\n  };\r\n\r\n  handleFooterButtons = (buttonClicked) => {\r\n    this.changeActivatedQueFromFooter(buttonClicked);\r\n  };\r\n\r\n  handleClearResponse = (index, blankClearAttempt) => {\r\n    if (!blankClearAttempt) {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = undefined;\r\n      this.setState({\r\n        totalAnswered: this.state.totalAnswered - 1,\r\n        totalPending: this.state.totalPending + 1,\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: false,\r\n      });\r\n    }\r\n  };\r\n  questionAnswered = (index, option, changed) => {\r\n    if (!changed) {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = option;\r\n      this.setState({\r\n        totalAnswered: this.state.totalAnswered + 1,\r\n        totalPending: this.state.totalPending - 1,\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: true,\r\n      });\r\n    } else {\r\n      // answers array\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = option;\r\n      this.setState({\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: true,\r\n      });\r\n    }\r\n  };\r\n  handleQuestionClick = (index) => {\r\n    this.child.changeActivatedQueInChild(index);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"question_board\">\r\n          <div className=\"left__side\">\r\n            <div className=\"test__info\">\r\n              <div className=\"username\"></div>\r\n              <div className=\"test__name\">\r\n                TestName: <span className=\"danger\">{this.props.testName}</span>\r\n              </div>\r\n              <div className=\"total__minutes\">\r\n                Total Minutes:{\" \"}\r\n                <span className=\"danger\">{this.props.totalMinutes}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"questions__status\">\r\n              <div className=\"total__answered box\">\r\n                <span className=\"count__answered\">\r\n                  {this.state.totalAnswered}{\" \"}\r\n                </span>\r\n                Answered\r\n              </div>\r\n              <div className=\"total__flagged box\">\r\n                <span className=\"count__flagged\">{this.state.flag} </span>\r\n                Flagged\r\n              </div>\r\n              <div className=\"total__pending box\">\r\n                <span className=\"count__pending\">\r\n                  {this.state.totalPending}{\" \"}\r\n                </span>\r\n                Pending\r\n              </div>\r\n            </div>\r\n            <LeftSide\r\n              questionsData={this.state.questionsData}\r\n              handleQuestionClick={this.handleQuestionClick}\r\n              activateQue={this.state.activateQue}\r\n              answered={this.state.answered}\r\n              footerClick={this.state.footerClick}\r\n              onRef={(ref) => (this.child = ref)}\r\n              flagClicked={(click) => (this.triggerFlag = click)}\r\n              flag={this.state.flag}\r\n            />\r\n          </div>\r\n          <RightSide\r\n            questionsData={this.state.questionsData}\r\n            questionAnswered={this.questionAnswered}\r\n            questionIndex={this.state.questionIndex}\r\n            handleClearResponse={this.handleClearResponse}\r\n            onRef={(ref) => (this.child = ref)}\r\n            changeParentActivatedQue={this.changeParentActivatedQue}\r\n            userAnswers={this.state.userAnswers}\r\n            answers={this.state.answers}\r\n            testID={this.state.testID}\r\n            testName={this.state.testName}\r\n          />\r\n          <div className=\"footer\">\r\n            <Footer\r\n              handleFooterButtons={this.handleFooterButtons}\r\n              handleSubmitTest={this.handleSubmitTest}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HandleLiveTest);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\r\nimport Counter from \"./Counter\";\r\nimport HandleLiveTest from \"./HandleLiveTest\";\r\n\r\nclass TestPreview extends Component {\r\n  state = {\r\n    testName: this.props.selectedTest.testName,\r\n    minutes: this.props.selectedTest.minutes,\r\n    _id: this.props.selectedTest._id,\r\n    intervalId: null,\r\n    timer: this.props.timer,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadData(this.state._id);\r\n    const intervalID = setInterval(this.loadData.bind(this), 60000);\r\n    this.setState({ intervalId: intervalID, timer: this.state.timer });\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.intervalId);\r\n  }\r\n  handleCounter =()=>{\r\n    this.clickChild();\r\n  }\r\n\r\n  loadData() {\r\n    try {\r\n      //   let testName, minutes, _id;\r\n      let testName, tM, _id, rM;\r\n      if (JSON.parse(localStorage.getItem(this.state._id)) === null) {\r\n        testName = this.state.testName;\r\n        tM = this.state.minutes;\r\n        _id = this.state._id;\r\n        rM = tM;\r\n        localStorage.setItem(\r\n          `${_id}`,\r\n          JSON.stringify({ testName, _id, tM, rM })\r\n        );\r\n      } else {\r\n        const testData = JSON.parse(localStorage.getItem(`${this.state._id}`));\r\n\r\n        let { testName, tM, _id, rM } = testData;\r\n        rM = rM - 1;\r\n        localStorage.setItem(\r\n          `${_id}`,\r\n          JSON.stringify({ testName, _id, tM, rM })\r\n        );\r\n      }\r\n\r\n      //   const profileID = localStorage.getItem(\"profileID\"),\r\n      //     completed = false;\r\n      //   const testData = JSON.parse(localStorage.getItem(\"trash\"));\r\n      //   let updatingAttemptedMinutes = localStorage.getItem(testData._id);\r\n\r\n      //   const data = {\r\n      //     profileID,\r\n      //     testName,\r\n      //     _id,\r\n      //     completed,\r\n      //     minutes,\r\n      //     updatingAttemptedMinutes,\r\n      //   };\r\n      //   //console.log(this.props.selectedTest, \"props\")\r\n      //   if (_id) {\r\n      //    // this.props.updateTimer(data);\r\n      //   }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n \r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Counter testID={this.state._id} totalMinutes={this.state.minutes} handleCounter ={this.handleCounter}/>\r\n        <HandleLiveTest\r\n          testID={this.state._id}\r\n          totalMinutes={this.state.minutes}\r\n          testName={this.state.testName}\r\n          testName={this.state.testName}\r\n          totalMinutes={this.state.minutes}\r\n          counterEnd ={click => this.clickChild = click}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    timer: state.userAttemptedTime.attemptedTime,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPreview);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport TestPreview from \"./TestPreview\";\r\nfunction TestPreviewWrapper(props) {\r\n  const { selectedTest } = props;\r\n  const isSelected = Object.keys(selectedTest).length == 0 ? false : true;\r\n  return (\r\n    <>{isSelected ? <TestPreview /> : <p>Please select a test first</p>}</>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestPreviewWrapper);\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Input, Avatar, Popover } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Profile.css\";\r\nimport { Roles } from \"../Roles/roles\";\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: undefined,\r\n      isVerified: undefined,\r\n      lastName: undefined,\r\n      email: undefined,\r\n      phone: undefined,\r\n      role: undefined,\r\n      section: undefined,\r\n      isVerified: undefined,\r\n    };\r\n  }\r\n  submitForm = (values) => {\r\n    // props.sendSignUpRequest(values);\r\n    console.log(values);\r\n  };\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      firstName: props.user.firstName,\r\n      lastName: props.user.lastName,\r\n      email: props.user.email,\r\n      isVerified: props.userisVerified,\r\n      phone: props.user.phone,\r\n      role: props.user.role,\r\n      section: props.user.section,\r\n      isVerified: props.user.isVerified,\r\n      className: props.user.className,\r\n    };\r\n  }\r\n  render() {\r\n    console.log(this.props.user);\r\n    const verfied = (\r\n      <div>\r\n        <p className=\"verified-popover\">Verified !</p>\r\n      </div>\r\n    );\r\n    const notVerfied = (\r\n      <div>\r\n        <p className=\"notverifieid-popover\">Not Verified!</p>\r\n      </div>\r\n    );\r\n    return (\r\n      <>\r\n        <Row justify=\"center\" align=\"middle\" className=\"hero\">\r\n          <Col xs={22} sm={22} md={8} lg={8} className=\"signup__container\">\r\n            <div className=\"avatar-wrapper\">\r\n              <Avatar\r\n                size={{ xs: 80, sm: 80, md: 80, lg: 80, xl: 90, xxl: 100 }}\r\n                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                className=\"avatar-image\"\r\n              />\r\n              <Popover content={this.state.isVerified ? verfied : notVerfied}>\r\n                <img\r\n                  src={\r\n                    this.state.isVerified ? \"/verified.png\" : \"/notVerified.png\"\r\n                  }\r\n                  alt=\"verification\"\r\n                  className=\"verified\"\r\n                />\r\n              </Popover>\r\n              <p\r\n                className=\"profile__heading\"\r\n                style={{ margin: 0, textAlign: \"center\" }}\r\n              >\r\n                Your Profile\r\n              </p>\r\n            </div>\r\n            <Form\r\n              name=\"basic\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.submitForm}\r\n            >\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item>\r\n                  <Input\r\n                    placeholder=\"First Name\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.firstName}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Input\r\n                    placeholder=\"Last Name\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.lastName}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <Form.Item>\r\n                <Input\r\n                  placeholder=\"abcd@gmail.com\"\r\n                  readonly=\"readOnly\"\r\n                  value={this.state.email}\r\n                  className=\"input\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Input\r\n                  type=\"tel\"\r\n                  placeholder=\"7275XXXXXX\"\r\n                  readonly=\"readOnly\"\r\n                  value={this.state.phone}\r\n                  className=\"input\"\r\n                />\r\n              </Form.Item>\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item>\r\n                  <Input\r\n                    placeholder=\"Role\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.role}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  className={Roles.teacher === this.state.role ? \"hidden\" : \"\"}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Class\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.className}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  className={Roles.teacher === this.state.role ? \"hidden\" : \"\"}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Section\"\r\n                    readonly=\"readOnly\"\r\n                    value={this.state.section}\r\n                    className=\"input\"\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.auth.user ? state.auth.user : null,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React, { useState } from \"react\";\r\nimport { AiFillPlusCircle } from \"react-icons/ai\";\r\nimport { Input, Popover } from \"antd\";\r\n\r\nexport default function Rules(props) {\r\n  const [rule, setRule] = useState(\"\");\r\n  const submitInput = (\r\n    <div>\r\n      <p className=\"verified-popover \">Add Rule</p>\r\n    </div>\r\n  );\r\n\r\n  const handleOnChnage = (e) => {\r\n    setRule(e.target.value);\r\n  };\r\n  const handleAddRule = () => {\r\n    if (rule !== \"\") {\r\n      props.addRule(rule);\r\n      setRule(\"\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"rules__wrapper\">\r\n        <div className=\"options__wrapper\">\r\n          <Input\r\n            placeholder=\"Write your rule for test\"\r\n            className=\"input\"\r\n            value={rule}\r\n            onChange={handleOnChnage}\r\n            style={{ margin: \"0 5px\" }}\r\n          />\r\n          <div className=\"add__new\" onClick={handleAddRule}>\r\n            {\r\n              <Popover content={submitInput}>\r\n                <AiFillPlusCircle className=\"success\" />\r\n              </Popover>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Input, Popover } from \"antd\";\r\nimport { AiFillPlusCircle } from \"react-icons/ai\";\r\n\r\nexport default function Rules(props) {\r\n  const [questionDescripiton, setQuestionDescripiton] = useState(\"\");\r\n  const [opiton1, setOption1] = useState(\"\");\r\n  const [opiton2, setOption2] = useState(\"\");\r\n  const [opiton3, setOption3] = useState(\"\");\r\n  const [opiton4, setOption4] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const submitInput = (\r\n    <div>\r\n      <p className=\"verified-popover \">Add Question</p>\r\n    </div>\r\n  );\r\n\r\n  const handleOnChangeQuestion = (e) => {\r\n    setQuestionDescripiton(e.target.value);\r\n  };\r\n  const handleOption1 = (e) => {\r\n    setOption1(e.target.value);\r\n  };\r\n  const handleOption2 = (e) => {\r\n    setOption2(e.target.value);\r\n  };\r\n  const handleOption3 = (e) => {\r\n    setOption3(e.target.value);\r\n  };\r\n  const handleOption4 = (e) => {\r\n    setOption4(e.target.value);\r\n  };\r\n  const handleAnswer = (e) => {\r\n    setAnswer(e.target.value);\r\n  };\r\n  const handleAddQuestion = () => {\r\n    const questionData = {\r\n      questionDescripiton,\r\n      opiton1,\r\n      opiton2,\r\n      opiton3,\r\n      opiton4,\r\n      answer,\r\n    };\r\n\r\n    props.addQuestion(questionData);\r\n    console.log(questionData);\r\n    setQuestionDescripiton(\"\");\r\n    setOption1(\"\");\r\n    setOption2(\"\");\r\n    setOption3(\"\");\r\n    setOption4(\"\");\r\n    setAnswer(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"rules__wrapper\">\r\n        <div className=\"options__wrapper \">\r\n          <Input.TextArea\r\n            placeholder=\"Question Description\"\r\n            className=\"input \"\r\n            value={questionDescripiton}\r\n            onChange={handleOnChangeQuestion}\r\n            style={{ margin: \"0 5px\" }}\r\n          />\r\n          <div className=\"add__new\" onClick={handleAddQuestion}>\r\n            {\r\n              <Popover content={submitInput}>\r\n                <AiFillPlusCircle className=\"success\" />\r\n              </Popover>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"question__options\">\r\n          <Input\r\n            placeholder=\"Option 1\"\r\n            className=\"input option\"\r\n            value={opiton1}\r\n            onChange={handleOption1}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Option 2\"\r\n            className=\"input option\"\r\n            value={opiton2}\r\n            onChange={handleOption2}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Option 3\"\r\n            className=\"input option\"\r\n            value={opiton3}\r\n            onChange={handleOption3}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Option 4\"\r\n            className=\"input option\"\r\n            value={opiton4}\r\n            onChange={handleOption4}\r\n            style={{ margin: \"10 5px\" }}\r\n          />\r\n          <Input\r\n            placeholder=\"Enter Correct Option No. i.e 1, 2 etc\"\r\n            type=\"number\"\r\n            className=\"input option\"\r\n            value={answer}\r\n            onChange={handleAnswer}\r\n            style={{ margin: \"10 5px\" }}\r\n            min={1}\r\n            max={4}\r\n            \r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Input, Popover } from \"antd\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\nexport default function RenderData(props) {\r\n  const { ruleData, questionData, question, rules } = props;\r\n\r\n  const handleClick = (index) => {\r\n    props.clickedRule(index);\r\n  };\r\n  return (\r\n    <div className=\"renderData__wrapper\">\r\n      {rules\r\n        ? ruleData &&\r\n          ruleData.map((item, index) => (\r\n            <div key={index}>\r\n              <p className=\"sub__render__heading\">Rule {index + 1}</p>\r\n              <div className=\"render__item\">\r\n                <Input\r\n                  readonly=\"readOnly\"\r\n                  value={item.value}\r\n                  className=\"input\"\r\n                  style={{ margin: \"0 5px\" }}\r\n                />\r\n                <TiDelete\r\n                  className=\"danger\"\r\n                  onClick={() => handleClick(index)}\r\n                  style={{ fontSize:\"30px\"}}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))\r\n        : questionData &&\r\n          questionData.map((item, index) => (\r\n            <div key={index}>\r\n              <p className=\"sub__render__heading\">Question {index + 1}</p>\r\n              <div className=\"render__item\">\r\n                <Input.TextArea\r\n                  readonly=\"readOnly\"\r\n                  value={item.questionDescripiton}\r\n                  className=\"input\"\r\n                  style={{ margin: \"0 5px\" }}\r\n                />\r\n                <TiDelete\r\n                  className=\"danger\"\r\n                  onClick={() => handleClick(index)}\r\n                  style={{ fontSize:\"30px\"}}\r\n                />\r\n              </div>\r\n              <div className=\"question__options\">\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton1}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton2}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton3}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  className=\"input option\"\r\n                  value={item.opiton4}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n                <Input\r\n                  type=\"number\"\r\n                  className=\"input option\"\r\n                  value={item.answer}\r\n                  readonly=\"readOnly\"\r\n                  style={{ margin: \"10 5px\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n}\r\n","import { logoutUser } from \"./authActions\";\r\nexport const SUBMIT_TEST_REQUEST = \"SUBMIT_TEST_REQUEST\";\r\nexport const SUBMIT_TEST_SUCCESS = \"SUBMIT_TEST_SUCCESS\";\r\nexport const SUBMIT_TEST_FAILURE = \"SUBMIT_TEST_FAILURE\";\r\n\r\nexport const ASSIGNED_TEST_REQUEST = \"ASSIGNED_TEST_REQUEST\";\r\nexport const ASSIGNED_TEST_SUCCESS = \"ASSIGNED_TEST_SUCCESS\";\r\nexport const ASSIGNED_TEST_FAILURE = \"ASSIGNED_TEST_FAILURE\";\r\n\r\nexport const SET_TEST_CREATED_FALSE = \"SET_TEST_CREATED_FALSE\";\r\n\r\nconst requestSubmitTest = () => {\r\n  return {\r\n    type: SUBMIT_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveSubmitTest = (user, profileID) => {\r\n  return {\r\n    type: SUBMIT_TEST_SUCCESS,\r\n  };\r\n};\r\n\r\nconst submitTestError = () => {\r\n  return {\r\n    type: SUBMIT_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nconst requestAssignedTest = () => {\r\n  return {\r\n    type: ASSIGNED_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveAssignedTest = (tests) => {\r\n  return {\r\n    type: ASSIGNED_TEST_SUCCESS,\r\n    tests,\r\n  };\r\n};\r\n\r\nconst AssignedTestError = () => {\r\n  return {\r\n    type: ASSIGNED_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nconst setTestCreatedFalse = () => {\r\n  return {\r\n    type: SET_TEST_CREATED_FALSE,\r\n  };\r\n};\r\n\r\nexport const submitTest = (values) => (dispatch) => {\r\n  console.log(values);\r\n\r\n  dispatch(requestSubmitTest());\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(values),\r\n  };\r\n  //console.log(\"Success:\", values);\r\n  fetch(\"/teacher/create-test\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data?.error?.name === \"TokenExpiredError\") {\r\n        dispatch(logoutUser());\r\n      } else {\r\n        dispatch(receiveSubmitTest(data.user));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(submitTestError());\r\n    });\r\n};\r\n\r\nexport const fetchAssignedTests = (profileID) => async (dispatch) => {\r\n  dispatch(requestAssignedTest());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  await fetch(`/teacher/tests/${profileID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          dispatch(receiveAssignedTest(data.obj));\r\n        }\r\n        // history.push(\"/studentHome\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(AssignedTestError());\r\n    });\r\n};\r\n\r\nexport const testCreatedFalse = () => async (dispatch) => {\r\n  dispatch(setTestCreatedFalse());\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Input, Button, Select, notification } from \"antd\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Rules from \"./Rules\";\r\nimport Questions from \"./Questions\";\r\nimport RenderData from \"./RenderData\";\r\nimport { submitTest, testCreatedFalse } from \"../../actions/TeacherActions\";\r\n\r\nclass CreateTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rules: [],\r\n      questions: [],\r\n      isLoading: false,\r\n      testCreated: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      isLoading: props.isLoading,\r\n      testCreated: props.testCreated,\r\n    };\r\n  }\r\n\r\n  submitForm = (values) => {\r\n    let questions = [];\r\n    let answers = [];\r\n    console.log(values);\r\n\r\n    const {\r\n      testName,\r\n      category,\r\n      className,\r\n      section,\r\n      minutes,\r\n      outOfMarks,\r\n    } = values;\r\n\r\n\r\n    questions = this.state.questions.map((question, index) => {\r\n      return {\r\n        description: question.questionDescripiton,\r\n        options: [\r\n          {\r\n            option: question.opiton1,\r\n          },\r\n          {\r\n            option: question.opiton2,\r\n          },\r\n          {\r\n            option: question.opiton3,\r\n          },\r\n          {\r\n            option: question.opiton4,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    this.state.questions.map((question, index) => {\r\n      answers.push(parseInt(question.answer));\r\n    });\r\n    const teacherId = this.props.teacherID;\r\n    const rules = this.state.rules;\r\n\r\n    const sendData = {\r\n      teacherId,\r\n      testName,\r\n      category,\r\n      className,\r\n      section,\r\n      rules,\r\n      testCreated: false,\r\n      minutes,\r\n      outOfMarks,\r\n      questions,\r\n      answers,\r\n    };\r\n\r\n    this.props.submitTest(sendData);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  handleSelect = (select, optionData) => {};\r\n\r\n  handleDeleteRule = (Removeindex) => {\r\n    \r\n    this.setState({\r\n      rules: this.state.rules.filter((item, index) => index !== Removeindex),\r\n    });\r\n  };\r\n  handleDeleteQuestion = (Removeindex) => {\r\n  \r\n    this.setState({\r\n      questions: this.state.questions.filter((item, index) => index !== Removeindex),\r\n    });\r\n  };\r\n  addRule = (value) => {\r\n    this.setState({\r\n      rules: [...this.state.rules, { value }],\r\n    });\r\n  };\r\n\r\n\r\n  openNotification = () => {\r\n    const args = {\r\n      message: \"Test Created\",\r\n      description: \"Congratulations, Your Test created successfully.\",\r\n      duration: 3,\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  addQuestion = ({\r\n    questionDescripiton,\r\n    opiton1,\r\n    opiton2,\r\n    opiton3,\r\n    opiton4,\r\n    answer,\r\n  }) => {\r\n    this.setState({\r\n      questions: [\r\n        ...this.state.questions,\r\n        { questionDescripiton, opiton1, opiton2, opiton3, opiton4, answer },\r\n      ],\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(){\r\n    if (this.props.testCreated) {\r\n      this.props.testCreatedFalse()\r\n      this.openNotification();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Option } = Select;\r\n\r\n    return (\r\n      <>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Col xs={22} sm={22} md={10} lg={10} className=\"signup__container\">\r\n            <p className=\"sub-title__signup\"> 🎓 Create Test</p>\r\n            <Form\r\n              name=\"basic\"\r\n              className=\"create__test__form\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.submitForm}\r\n              onFinishFailed={this.onFinishFailed}\r\n            >\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item\r\n                  name=\"testName\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Enter Test Name!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Test Name\" className=\"input\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"outOfMarks\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter total marks!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Total Marks\"\r\n                    className=\"input\"\r\n                    type=\"number\"\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <Form.Item\r\n                name=\"category\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter a category\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Catergory of Test\" className=\"input\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"minutes\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter total duration of test\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  placeholder=\"Duration of test ( in Minutes )\"\r\n                  className=\"input\"\r\n                  type=\"number\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item\r\n                  name=\"section\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your section!\" },\r\n                  ]}\r\n                >\r\n                  <Select defaultValue=\"Section\">\r\n                    <Option value=\"A\">A</Option>\r\n                    <Option value=\"B\">B</Option>\r\n                    <Option value=\"C\">C</Option>\r\n                    <Option value=\"D\">D</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"className\"\r\n                  rules={[{ required: true, message: \"Please select a class\" }]}\r\n                >\r\n                  <Select defaultValue=\"Class\">\r\n                    <Option value=\"IX\">IX</Option>\r\n                    {/* <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option> */}\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n              <p className=\"primary-wihtoutFont\" style={{ fontWeight: \"500\" }}>\r\n                {\" \"}\r\n                Test Rules\r\n              </p>\r\n              <RenderData\r\n                ruleData={this.state.rules}\r\n                rules={true}\r\n                clickedRule={this.handleDeleteRule}\r\n              />\r\n              <Form.Item>\r\n                <Rules addRule={this.addRule} />\r\n              </Form.Item>\r\n              <p className=\"primary-wihtoutFont\" style={{ fontWeight: \"500\" }}>\r\n                {\" \"}\r\n                Test Questions\r\n              </p>\r\n              <RenderData\r\n                questionData={this.state.questions}\r\n                questions={true}\r\n                clickedRule={this.handleDeleteQuestion}\r\n              />\r\n              <Form.Item>\r\n                <Questions addQuestion={this.addQuestion} />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  loading={this.state.isLoading}\r\n                  className=\"sign__up\"\r\n                  htmlType=\"submit\"\r\n                  disabled={(this.state.questions.length<1)?(true):(false)}\r\n                >\r\n                  {this.state.isLoading ? \"Creating Test\" : \"Create Test\"}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    teacherID: state.auth.profileID,\r\n    isLoading: state.teacher.isLoadingTest,\r\n    testCreated: state.teacher.testCreated,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitTest: (values) => dispatch(submitTest(values)),\r\n    testCreatedFalse: () => dispatch(testCreatedFalse()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTest);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nconst { Search } = Input;\r\nexport default function SearchBox(props) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    props.handleListData(searchTerm.toLowerCase());\r\n  }, [searchTerm]);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const onSearch = (value) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search__input\">\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          onSearch={onSearch}\r\n          onChange={handleSearchChange}\r\n          enterButton\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\r\n      `/test-status/${selectedData.testName\r\n        ?.replace(/\\s+/g, \"-\")\r\n        .toLowerCase()}`\r\n    );\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n    console.log(selectedData);\r\n    //console.log();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">Assigned Test</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchAssignedTests } from \"../../actions/TeacherActions\";\r\nimport { selectedAssignedTest } from \"../../actions/selectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SelectTest.css\";\r\nimport TestList from \"./TestList\";\r\n\r\nfunction SelectTest(props) {\r\n  const { tests, profileID } = props;\r\n  console.log(props);\r\n\r\n  const handleSelectedTest = (testData) => {\r\n    props.selectedTest(testData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__container\">\r\n        <TestList tests={tests} handleSelectedTest={handleSelectedTest} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.teacher.assignedTests,\r\n    \r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAssignedTests(profileID)),\r\n    selectedTest: (testData) => dispatch(selectedAssignedTest(testData)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectTest from \"./SelectTest\";\r\n\r\nfunction AssignedTestsWrapper(props) {\r\n  const { profileID } = props;\r\n  return (\r\n    <>\r\n      <div className=\"container dashboard\">\r\n        <Row gutter={[48, 10]} justify=\"center\">\r\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\r\n            <SelectTest profileID={profileID} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AssignedTestsWrapper);\r\n","import React from \"react\";\r\nimport { Col } from \"antd\";\r\nimport \"./StudentStatus.css\";\r\n\r\nexport default function StudentStatus(props) {\r\n  const student = props.student;\r\n  const className = props.className;\r\n  const testName = props.testName;\r\n  return (\r\n    <>\r\n      <Col className=\"gutter-row gutter-col-adder\" sm={24} xs={24} md={6} lg={6}>\r\n        <div className=\"student__status__wrapper\">\r\n          <div className=\"status__header\">\r\n            <p className=\"status__header__heading\">\r\n              {student.firstName.toUpperCase()} {student.lastName.toUpperCase()}\r\n            </p>\r\n          </div>\r\n          <div className=\"student__status__body\">\r\n            <div className=\"status__test\">\r\n              Test Name: <span className=\"status__testname\"> {testName}</span>\r\n            </div>\r\n            <div className=\"status__test__total\">\r\n              Total Marks:{\" \"}\r\n              <span className=\"status__testname\">{student.totalMarks}</span>\r\n            </div>\r\n            <div className=\"status__test__obtained\">\r\n              Obtained Marks:{\" \"}\r\n              <span className=\"status__testname\">{student.correct}</span>\r\n            </div>\r\n            <div className=\"status__test__correct\">\r\n              Correct Answers:{\" \"}\r\n              <span className=\"status__testname success-wihtoutFont\">\r\n                {student.correct}\r\n              </span>\r\n            </div>\r\n            <div className=\"status__test__wrong\">\r\n              Wrong Answers:{\" \"}\r\n              <span className=\"status__testname danger\">{student.wrong}</span>\r\n            </div>\r\n            <div className=\"status__test__unanswered\">\r\n              Not Answered:{\" \"}\r\n              <span className=\"status__testname primary-wihtoutFont\">\r\n                {student.unanswered}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport StudentStatus from \"./StudentStatus\";\r\n\r\nfunction TestStatus(props) {\r\n  console.log(props.selectedTest);\r\n  const style = { background: \"#0092ff\", padding: \"8px 0\" };\r\n  const students = props.selectedTest.submitBy;\r\n  const className = props.selectedTest.className;\r\n  const testName = props.selectedTest.testName;\r\n  return (\r\n    <>\r\n      <div className=\"container student__status\">\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          {students.length > 0 &&\r\n            students.map((student, index) => (\r\n              <StudentStatus\r\n                className={className}\r\n                testName={testName}\r\n                student={student}\r\n                key={index}\r\n              />\r\n            ))}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedAssignedTestData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TestStatus);\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"../logIn/Login\";\nimport Signup from \"../signUp/Signup\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"../protectedRoute/ProtectedRoute\";\nimport StudentDashboard from \"../dashboard/Dashboard\";\nimport TeacherDashboard from \"../Teacher/Dashboard/Dashboard\";\nimport AttemptTest from \"../attemptTest/AttemptTest\";\nimport Navbar from \"../navbar\";\nimport Result from \"../result/ResultWrapper\";\nimport TestInstruction from \"../TestInstructions/TestInstruction\";\nimport IndividualResult from \"../result/ShowResult\";\nimport TestPreviewWrapper from \"../testPreview/TestPreviewWrapper\";\nimport { connect } from \"react-redux\";\nimport { Modal } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Profile from \"../profile/Profile\";\nimport { Roles } from \"../Roles/roles\";\nimport CreateTest from \"../Teacher/CreateTest/CreateTest\";\nimport AssignedTestsWrapper from \"../Teacher/AssigenedTest/AssignedTestsWrapper\";\nimport TestStatus from \"../Teacher/TestStatus/TestStatus\";\nimport { message } from \"antd\";\nimport { Offline, Online } from \"react-detect-offline\";\n\nfunction App(props) {\n  const [count, setCount] = useState(1);\n\n  const handleOffline = () => {\n    setCount(count + 1);\n    if (count % 2 == 0) {\n      message.success(\"Connected to internet\");\n    } else {\n      message.error(\"Please connect to internet\");\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n    });\n    window.addEventListener(\"keydown\", (e) => {\n      console.log(e);\n      if (e.key == \"F12\") {\n        e.preventDefault();\n      }\n    });\n  }, []);\n\n  const { selectedTestName, selectedAssignedTestName } = props;\n  const role = props.userInfo.role;\n  const { confirm } = Modal;\n  const history = useHistory();\n\n  return (\n    <div className={count % 2 ? \"\" : \" pointer__select__none\"}>\n      <Offline onChange={(e) => handleOffline(e)}></Offline>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact={true} path={\"/signin\"} component={Login} />\n          <Route exact={true} path=\"/signup\" component={Signup} />\n          <ProtectedRoute\n            exact={true}\n            path=\"/\"\n            component={\n              Roles.teacher === role ? TeacherDashboard : StudentDashboard\n            }\n          />\n          <ProtectedRoute\n            exact={true}\n            path=\"/attempt-test\"\n            component={AttemptTest}\n          />\n          <ProtectedRoute\n            exact={true}\n            path=\"/create-test\"\n            component={Roles.teacher === role ? CreateTest : AttemptTest}\n          />\n          <ProtectedRoute exact={true} path=\"/result\" component={Result} />\n          <ProtectedRoute\n            exact={true}\n            path={`/result/${selectedTestName}`}\n            component={IndividualResult}\n          />\n          <ProtectedRoute\n            exact={true}\n            path=\"/test-instructions\"\n            component={TestInstruction}\n          />\n          <ProtectedRoute\n            exact={true}\n            path=\"/start-test\"\n            component={TestPreviewWrapper}\n          />\n          <ProtectedRoute exact={true} path=\"/profile\" component={Profile} />\n          <ProtectedRoute\n            exact={true}\n            path=\"/assigned-test\"\n            component={\n              Roles.teacher === role ? AssignedTestsWrapper : StudentDashboard\n            }\n          />\n          <ProtectedRoute\n            exact={true}\n            path={`/test-status/${selectedAssignedTestName}`}\n            component={TestStatus}\n          />\n          <ProtectedRoute component={Login} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedTestName: state.selectedTest.selectedTestResultData.testName\n      ?.replace(/\\s+/g, \"-\")\n      .toLowerCase(),\n    userInfo: state.auth.user,\n    selectedAssignedTestName: state.selectedTest.selectedAssignedTestData.testName\n      ?.replace(/\\s+/g, \"-\")\n      .toLowerCase(),\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  LOGIN_FAILURE,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  LOGOUT_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  VERIFY_REQUEST,\r\n  VERIFY_SUCCESS,\r\n  SEND_PASS_RESET_SUCCESS,\r\n  SEND_PASS_RESET,\r\n  SEND_PASS_RESET_ERROR,\r\n  USER_ACCOUNT_CREATED,\r\n} from \"../actions/authActions\";\r\n// import storageListner from \"../storageListener/localStorageListener\";\r\n\r\nconst initialState = {\r\n  isLoggingIn: false,\r\n  isSigningUp: false,\r\n  isLoading: false,\r\n  isLoggingOut: false,\r\n  isVerifying: false,\r\n  loginError: false,\r\n  signupError: false,\r\n  logoutError: false,\r\n  accountCreated: false,\r\n  isAuthenticated: localStorage.getItem(\"token\") ? true : false,\r\n  sendPassResetSuccess: false,\r\n  sendPassResetError: false,\r\n  profileID: localStorage.getItem(\"profileID\"),\r\n  user: JSON.parse(localStorage.getItem(\"userProfile\"))\r\n    ? JSON.parse(localStorage.getItem(\"userProfile\"))\r\n    : {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      console.log(\"login request fired\");\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        isLoading: true,\r\n        loginError: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      console.log(\"login success fired\", action.obj);\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isLoading: false,\r\n        isAuthenticated: true,\r\n        user: action.user,\r\n        profileID: action.profileID,\r\n      };\r\n    case LOGIN_FAILURE:\r\n      console.log(\"login failure fired\");\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        loginError: true,\r\n      };\r\n\r\n    case SIGN_UP_REQUEST:\r\n      return {\r\n        ...state,\r\n        isSigningUp: true,\r\n        isLoading: true,\r\n        signupError: false,\r\n      };\r\n\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isLoading: false,\r\n        signupError: false,\r\n        accountCreated: true,\r\n        // isAuthenticated: true,\r\n        // user: action.user,\r\n      };\r\n\r\n    case SIGN_UP_FAILURE:\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isLoading: false,\r\n        signupError: action.errMess,\r\n      };\r\n\r\n    case USER_ACCOUNT_CREATED:\r\n      return {\r\n        ...state,\r\n        accountCreated: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        sendPassResetSuccess: false,\r\n        sendPassResetError: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        sendPassResetSuccess: true,\r\n        sendPassResetError: false,\r\n      };\r\n\r\n    case SEND_PASS_RESET_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        sendPassResetSuccess: false,\r\n        sendPassResetError: action.errMess,\r\n      };\r\n\r\n    case LOGOUT_REQUEST:\r\n      return { ...state, isLoggingOut: true, logoutError: false };\r\n\r\n    case LOGOUT_SUCCESS:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"userProfile\");\r\n      localStorage.removeItem(\"profileID\");\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        isAuthenticated: false,\r\n        user: {},\r\n      };\r\n\r\n    case LOGOUT_FAILURE:\r\n      return { ...state, isLoggingOut: false, logoutError: true };\r\n\r\n    case VERIFY_REQUEST:\r\n      return { ...state, isVerifying: true, verifyingError: false };\r\n\r\n    case VERIFY_SUCCESS:\r\n      return { ...state, isVerifying: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_TEST_REQUEST,\r\n  FETCH_TEST_SUCCESS,\r\n  FETCH_ATTEMPT_TEST_SUCCESS,\r\n  FETCH_TEST_FAILURE,\r\n  SUBMIT_TEST_FAILURE,\r\n  SUBMIT_TEST_SUCCESS,\r\n  FETCH_TEACHER_TEST_REQUEST,\r\n  FETCH_TEACHER_TEST_SUCCESS,\r\n  FETCH_TEACHER_TEST_FAILURE,\r\n} from \"../actions/testActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isLoadingTest: false,\r\n  isLoadingAttemptedTest: false,\r\n  fetchingError: false,\r\n  isFetched: false,\r\n  testSubmitted: false,\r\n  testSubmitError: false,\r\n  test: [],\r\n  attemptedTest: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        isLoadingAttemptedTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case FETCH_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        test: action.tests,\r\n      };\r\n    case FETCH_TEACHER_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        isLoadingAttemptedTest: true,\r\n        fetchingError: false,\r\n      };\r\n\r\n    case FETCH_TEACHER_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        test: action.tests,\r\n      };\r\n\r\n    case FETCH_TEACHER_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isLoadingTest: false,\r\n        isLoadingAttemptedTest: false,\r\n        fetchError: true,\r\n      };\r\n\r\n    case FETCH_ATTEMPT_TEST_SUCCESS:\r\n      // console.log(action.tests)\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isLoadingAttemptedTest: false,\r\n        attemptedTest: action.tests[0].attemptedTest,\r\n      };\r\n\r\n    case FETCH_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isLoadingTest: false,\r\n        isLoadingAttemptedTest: false,\r\n        fetchError: true,\r\n      };\r\n    case SUBMIT_TEST_SUCCESS:\r\n      localStorage.removeItem(action.testID);\r\n      return {\r\n        ...state,\r\n        testSubmitted: true,\r\n        testSubmitError: false,\r\n      };\r\n    case SUBMIT_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        testSubmitted: false,\r\n        testSubmitError: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  TEST_SELECTED,\r\n  SELECTED_TEST_RESULT,\r\n  SELECTED_ASSIGNED_TEST,\r\n} from \"../actions/selectActions\";\r\n\r\nconst initialState = {\r\n  selectedTestData: {},\r\n  selectedTestResultData: {},\r\n  selectedAssignedTestData: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TEST_SELECTED:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        selectedTestData: action.testData,\r\n      };\r\n\r\n    case SELECTED_TEST_RESULT:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        selectedTestResultData: action.testData,\r\n      };\r\n    case SELECTED_ASSIGNED_TEST:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        selectedAssignedTestData: action.testData,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  UPDATE_ATTEMPT_TEST_REQUEST,\r\n  UPDATE_ATTEMPT_TEST_SUCCESS,\r\n  UPDATE_ATTEMPT_TEST_FAILURE,\r\n} from \"../actions/attemptTestActions\";\r\n\r\nconst initialState = {\r\n  attemptedTime: 0,\r\n  isFetching: false,\r\n  isFetched: false,\r\n  isFetchingError: false,\r\n  initializeTimer: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_ATTEMPT_TEST_REQUEST:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n\r\n    case UPDATE_ATTEMPT_TEST_SUCCESS:\r\n      // console.log(\"login success fired\", action.obj)\r\n      //console.log(action.data);\r\n      const checker = state.initializeTimer;\r\n      return {\r\n        ...state,\r\n        isFetched: true,\r\n        isFetching: false,\r\n        attemptedTime: action.time,\r\n        initializeTimer: true,\r\n      };\r\n    case UPDATE_ATTEMPT_TEST_FAILURE:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isFetchingError: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  FETCH_CLASSES_REQUEST,\r\n  FETCH_CLASSES_SUCCESS,\r\n  FETCH_CLASSES_FAILURE,\r\n} from \"../actions/classesActions\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  isFetched: false,\r\n  isFetchError: false,\r\n  classes: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_CLASSES_REQUEST:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case FETCH_CLASSES_SUCCESS:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isFetched: true,\r\n        classes: action.data,\r\n      };\r\n\r\n    case FETCH_CLASSES_FAILURE:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isfetched: false,\r\n        isLoading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SUBMIT_TEST_REQUEST,\r\n  SUBMIT_TEST_SUCCESS,\r\n  SUBMIT_TEST_FAILURE,\r\n  ASSIGNED_TEST_REQUEST,\r\n  ASSIGNED_TEST_FAILURE,\r\n  ASSIGNED_TEST_SUCCESS,\r\n  SET_TEST_CREATED_FALSE,\r\n} from \"../actions/TeacherActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isLoadingTest: false,\r\n  fetchingError: false,\r\n  isFetched: false,\r\n  testCreated: false,\r\n  testSubmitted: false,\r\n  testSubmitError: false,\r\n  assignedTests: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SUBMIT_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case SUBMIT_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        testCreated: true,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n      };\r\n    case SUBMIT_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case ASSIGNED_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case ASSIGNED_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        testCreated: true,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        assignedTests: action.tests,\r\n      };\r\n    case ASSIGNED_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case SET_TEST_CREATED_FALSE:\r\n      return {\r\n        ...state,\r\n        testCreated: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport testReducer from \"./testReducer\";\r\nimport selectTestReducer from \"./selectReducer\";\r\nimport attemptedTestReducer from \"./attemptedTestReducer\";\r\nimport classesReducer from \"./classesReducer\";\r\nimport TeacherReducer from \"./teacherReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  tests: testReducer,\r\n  selectedTest: selectTestReducer,\r\n  userAttemptedTime: attemptedTestReducer,\r\n  classesData: classesReducer,\r\n  teacher: TeacherReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"../reducers/index\";\r\nimport logger from \"redux-logger\";\r\n\r\n// const allEnhancers = compose(applyMiddleware(thunk, logger));\r\nconst allEnhancers = compose(applyMiddleware(thunk));\r\n\r\nconst store = createStore(reducer, allEnhancers);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}